89;root{Module{FunctionDef{For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{Mult{}, Str{}, }, Print{Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Str{}, }, }, }, }, }, }
79;root{Module{FunctionDef{Print{Str{}, Mult{}, }, For{Call{Sub{}, }, Assign{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, Print{}, }, Print{Str{}, Mult{}, }, }, }, }
59;root{Module{FunctionDef{For{Call{}, Assign{Str{}, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, Print{}, }, }, }, }
55;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, BoolOp{Or{}, }, BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }
45;root{Module{FunctionDef{Assign{}, Print{Mult{}, Str{}, }, Print{}, For{Call{Sub{}, }, Print{Mult{}, Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Mult{}, Str{}, }, }, Print{Mult{}, Str{}, }, }, }, }
25;root{Module{FunctionDef{Print{Add{}, Mult{}, Str{}, }, For{Call{Sub{}, }, Print{Str{}, Sub{}, Mult{}, Str{}, Str{}, }, }, Print{Add{}, Mult{}, Str{}, }, Print{}, }, }, }
16;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{NotEq{}, }, Assign{}, Print{Str{}, }, }, Print{Str{}, }, Print{}, }, }, }, }
15;root{Module{FunctionDef{Assign{Str{}, Mult{}, }, Assign{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, Print{}, For{Call{Sub{}, }, Print{}, }, Print{}, }, }, }
7;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{And{}, BoolOp{And{}, Compare{Lt{}, Sub{}, }, Compare{Lt{}, Sub{}, }, }, BoolOp{And{}, Compare{Gt{}, }, Compare{Gt{}, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
7;root{Module{FunctionDef{Assign{ListComp{ListComp{IfExp{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, Str{}, Str{}, }, comprehension{Call{}, }, }, comprehension{Call{}, }, }, }, For{Print{Call{Attribute{Str{}, }, }, }, }, }, }, }
6;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Assign{Str{}, }, Print{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Expr{}, }, }, }, }, }, }, }
6;root{Module{FunctionDef{Print{Str{}, Mult{}, }, For{Call{}, For{Call{}, If{BoolOp{Or{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, Print{Str{}, Mult{}, }, }, }, }
5;root{Module{FunctionDef{Assign{Sub{}, Mult{}, Str{}, }, Print{Mult{}, Str{}, }, For{Call{Sub{}, }, Print{Str{}, Add{}, Add{}, Str{}, }, }, Print{Mult{}, Str{}, }, }, }, }
5;root{Module{FunctionDef{Print{Mult{}, Str{}, }, For{Call{Sub{}, }, Print{Str{}, }, }, }, }, }
5;root{Module{FunctionDef{For{Call{Sub{}, }, If{BoolOp{Or{}, }, Print{Str{}, Mult{}, }, Assign{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, Print{}, }, }, Print{Str{}, Mult{}, }, }, }, }
3;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{Mult{}, }, Print{Add{}, Mult{}, FloorDiv{}, Add{}, }, }, }, }, }, }
3;root{Module{FunctionDef{For{Call{}, If{Print{Str{}, Mult{}, }, If{Compare{Sub{}, }, Print{Str{}, Mult{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, }, }, }, }, }, }
3;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Print{Mult{}, }, For{Call{Sub{}, }, Print{Add{}, Sub{}, Mult{}, Add{}, }, }, Print{Mult{}, }, }, }, }
3;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, AugAssign{Add{}, Str{}, }, }, Print{}, Assign{Str{}, }, For{Call{Sub{}, }, Assign{Str{}, }, For{Call{Sub{}, }, AugAssign{Add{}, Str{}, }, }, AugAssign{Add{}, Str{}, }, Print{}, }, Assign{Str{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, If{Print{Mult{}, Str{}, }, If{Print{Mult{}, Str{}, }, Print{FloorDiv{}, Mult{}, Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, FloorDiv{}, Mult{}, Str{}, }, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Sub{}, }, Print{Str{}, }, }, Print{Str{}, }, For{Call{Sub{}, }, Print{Str{}, }, For{Call{Sub{}, }, Print{Str{}, }, }, Print{Str{}, }, }, For{Call{}, Print{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, Assign{Str{}, }, For{Call{Add{}, }, If{BoolOp{Or{}, }, AugAssign{Add{}, Str{}, }, Expr{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, Assign{Str{}, }, If{BoolOp{Or{}, }, Assign{Add{}, Mult{}, Str{}, }, Assign{Add{}, Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Str{}, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Sub{}, }, Assign{Add{}, Str{}, }, Assign{Add{}, Str{}, }, }, Assign{Add{}, Str{}, }, Assign{Add{}, Str{}, }, Print{}, For{Call{Sub{}, }, Print{}, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, AugAssign{Add{}, Str{}, }, }, For{Call{Sub{}, }, AugAssign{Add{}, Str{}, }, }, Print{}, For{Call{Sub{}, }, Print{Str{}, Add{}, Add{}, Str{}, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{AugAssign{Add{}, }, For{Call{}, Assign{Str{}, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Assign{Subscript{Slice{}, }, Add{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, Print{Str{}, }, If{BoolOp{Or{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, Assign{Add{}, Str{}, }, }, Print{}, For{Call{Sub{}, }, Assign{Str{}, }, Assign{Add{}, Str{}, }, For{Call{Sub{}, }, Assign{}, }, }, }, }, }
1;root{Module{FunctionDef{If{Print{Str{}, }, }, If{For{Call{}, Print{Str{}, }, Print{Str{}, }, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Add{}, }, Assign{Str{}, Mult{}, }, Assign{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, If{BoolOp{Or{}, }, Print{}, }, If{BoolOp{And{}, Compare{Lt{}, }, Compare{Gt{}, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Print{Mult{}, Str{}, }, Assign{}, If{Compare{Lt{}, }, While{Compare{NotEq{}, }, Assign{Add{}, }, }, }, While{Compare{NotEq{}, }, Print{Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Str{}, }, Assign{Sub{}, }, }, Print{Mult{}, Str{}, }, }, }, }
1;root{Module{FunctionDef{Assign{ListComp{ListComp{Str{}, comprehension{Call{}, }, }, comprehension{Call{}, }, }, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Assign{ListComp{Str{}, comprehension{Call{}, }, }, }, }, Assign{Subscript{Index{Sub{}, }, }, Str{}, }, Print{Call{Attribute{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Print{Str{}, }, If{Compare{Sub{}, }, Print{Str{}, }, If{Print{Str{}, }, If{Compare{Sub{}, }, Print{Str{}, }, Print{}, }, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{Str{}, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, If{BoolOp{Or{}, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, Mult{}, Sub{}, }, For{Call{Add{}, }, If{BoolOp{Or{}, }, Print{Str{}, Mult{}, }, Print{Str{}, Add{}, Add{}, Str{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, Print{Str{}, }, }, Print{}, For{Call{Sub{}, }, For{Call{Sub{}, }, If{Print{Str{}, }, }, If{Compare{Sub{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Expr{Call{Str{}, Str{}, }, }, Expr{Call{Str{}, Str{}, }, }, }, }, }, FunctionDef{Print{Add{}, Sub{}, Mult{}, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{}, Expr{Call{Attribute{}, Str{}, }, }, }, Print{Call{Attribute{Str{}, }, }, }, For{Call{Sub{}, }, Assign{List{}, }, Expr{Call{Attribute{}, Str{}, }, }, For{Call{Sub{}, }, Expr{Call{Attribute{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Print{Str{}, Mult{}, }, Assign{}, While{Compare{Lt{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, AugAssign{Add{}, }, If{Compare{Sub{}, }, Print{Str{}, Mult{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{And{}, Compare{Lt{}, Lt{}, Sub{}, }, Compare{Lt{}, Lt{}, Sub{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Print{}, Print{}, Print{}, Print{}, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{Add{}, }, For{Call{Add{}, }, If{BoolOp{Or{}, }, AugAssign{Add{}, Str{}, }, If{BoolOp{Or{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Print{Mult{}, Str{}, }, }, If{Compare{Sub{}, }, Print{Mult{}, Str{}, }, }, If{Compare{Gt{}, }, If{Compare{Lt{}, Sub{}, }, Print{Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, AugAssign{Add{}, Str{}, }, If{BoolOp{Or{}, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Print{Mult{}, Str{}, }, Print{Mult{}, Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Mult{}, Str{}, }, Print{Mult{}, Str{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Mult{}, Str{}, }, Print{Mult{}, Str{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, Mult{}, }, Assign{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, For{Call{}, If{BoolOp{And{}, Compare{Gt{}, }, Compare{Lt{}, Sub{}, }, }, Print{}, }, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Print{Str{}, Mult{}, Add{}, Sub{}, Mult{}, Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, Add{}, Str{}, Mult{}, }, }, }, }
1;root{Module{FunctionDef{Print{Mult{}, Str{}, }, Assign{Str{}, }, AugAssign{Add{}, Sub{}, Mult{}, Str{}, }, AugAssign{Add{}, Str{}, }, For{Call{Sub{}, }, Print{}, }, Print{Mult{}, Str{}, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Print{Str{}, Mult{}, }, Assign{Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, Mult{}, Sub{}, }, AugAssign{Add{}, Str{}, }, For{Call{Sub{}, }, Print{}, }, Print{Str{}, Mult{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, For{Call{}, If{BoolOp{Or{}, }, AugAssign{Add{}, Str{}, }, If{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Add{}, }, If{BoolOp{Or{}, }, Print{Mult{}, }, }, If{Compare{Gt{}, Gt{}, }, Print{Add{}, Sub{}, Mult{}, Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, AugAssign{Add{}, Call{Attribute{Str{}, }, Mult{}, Str{}, }, }, AugAssign{Add{}, Call{Attribute{Str{}, }, Str{}, }, Add{}, Call{Attribute{Str{}, }, Sub{}, Mult{}, Str{}, }, Add{}, Call{Attribute{Str{}, }, Str{}, }, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Print{Str{}, Mult{}, }, For{Call{Sub{}, }, For{Call{Add{}, }, If{Assign{Str{}, }, If{AugAssign{Add{}, Str{}, }, Print{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Subscript{Slice{}, }, Add{}, Str{}, Mult{}, Sub{}, Add{}, Subscript{Slice{}, }, }, Print{Str{}, Mult{}, }, Print{}, For{Call{Sub{}, }, Print{}, Print{}, }, Print{Str{}, Mult{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Sub{}, }, Assign{Str{}, }, Assign{Call{}, }, Print{}, For{Call{}, Assign{Call{}, }, Print{}, }, Assign{Call{}, }, Print{}, }, Expr{}, }, }
1;root{Module{FunctionDef{Assign{Str{}, Mult{}, }, Print{}, For{Call{Sub{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Sub{}, Add{}, Str{}, }, }, }, Print{}, }, }, }
