277;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Add{}, Mod{}, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
28;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
13;root{Module{FunctionDef{For{Call{Div{}, }, For{Call{Div{}, }, Print{Str{}, }, }, Print{}, For{Call{Div{}, }, Print{Str{}, }, }, Print{}, }, }, }, }
12;root{Module{FunctionDef{For{Call{}, Print{}, If{Compare{Mod{}, }, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
9;root{Module{FunctionDef{For{Call{}, Expr{Call{Mod{}, }, }, }, }, FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }
7;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{Str{}, }, }, }, }, }
6;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Print{Str{}, }, Assign{}, Print{Str{}, }, Assign{}, }, }, }, }, }, }
6;root{Module{FunctionDef{For{Call{Sub{}, }, Print{Str{}, }, }, Print{}, For{Call{Sub{}, }, Print{Str{}, }, }, Print{}, }, }, }
5;root{Module{FunctionDef{For{Call{Add{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Expr{}, }, }, }, }, }
4;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, For{Call{Div{}, }, If{Compare{Mod{}, }, Print{}, Print{}, }, }, Print{}, }, Print{}, }, }, }
3;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, BoolOp{And{}, }, }, Print{Str{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, }, Print{}, }, }, }, }
3;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Div{}, Mult{}, Str{}, Add{}, Str{}, Add{}, Str{}, Add{}, Str{}, }, Print{Div{}, Mult{}, Str{}, Add{}, Str{}, Add{}, Str{}, Add{}, Str{}, }, }, }, }, }, }
3;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
3;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{FloorDiv{}, Mult{}, Str{}, Add{}, Str{}, }, Print{FloorDiv{}, Mult{}, Str{}, Add{}, Str{}, }, }, }, }, }, }
3;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, }, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{Assign{}, Assign{Str{}, }, While{Compare{Gt{}, }, For{Call{}, Print{}, If{Compare{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, }, }, Assign{Sub{}, }, If{Return{}, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Div{}, Mult{}, Str{}, }, Print{Div{}, Mult{}, Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, For{Call{Add{}, }, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, NotEq{}, }, Compare{Mod{}, NotEq{}, }, }, BoolOp{And{}, Compare{Mod{}, NotEq{}, }, Compare{Mod{}, NotEq{}, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{Assign{List{Str{}, Str{}, }, }, Assign{}, For{Call{}, For{Call{}, Print{}, AugAssign{Add{}, }, AugAssign{Mod{}, }, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{FloorDiv{}, }, For{Call{FloorDiv{}, }, Print{Str{}, }, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, Print{}, }, For{Call{FloorDiv{}, }, Print{Str{}, }, }, If{Compare{Mod{}, NotEq{}, }, Print{}, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, Assign{}, If{Compare{Mod{}, }, Assign{}, }, For{Call{Add{}, }, For{Call{Add{}, }, If{Print{Str{}, }, Assign{}, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, For{Call{}, If{Assign{}, Assign{}, }, For{Call{}, If{Print{Str{}, }, Assign{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Div{}, }, For{Call{Div{}, }, Print{Mult{}, Str{}, }, Print{Mult{}, Str{}, }, }, Print{}, For{Call{Div{}, }, Print{Mult{}, Str{}, }, Print{Mult{}, Str{}, }, }, Expr{}, }, }, }, }
2;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Print{Str{}, }, Print{Str{}, }, }, Assign{UnaryOp{Not{}, }, }, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{Assign{List{Str{}, Str{}, }, }, Assign{}, For{Call{}, For{Call{}, Print{}, Assign{Call{UnaryOp{Not{}, }, }, }, }, Print{}, Assign{Subscript{Slice{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, For{Call{Add{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, }, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Compare{Mod{}, Mod{}, }, If{Compare{Sub{}, }, Print{Str{}, }, }, Print{Str{}, }, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, Assign{Mult{}, }, If{Print{Str{}, }, Print{Str{}, }, }, }, Assign{Mult{}, }, Expr{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{Add{}, }, For{Call{Add{}, }, If{Compare{Mod{}, NotEq{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, Print{Str{}, }, }, For{Call{}, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }
2;root{Module{FunctionDef{Assign{}, While{Compare{Lt{}, }, Assign{}, While{Compare{LtE{}, }, Print{Str{}, }, AugAssign{Add{}, }, If{Break{}, }, Print{Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, If{Compare{NotEq{}, }, Print{Str{}, }, }, For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Div{}, Sub{}, Add{}, Str{}, }, Print{Str{}, Add{}, Str{}, Mult{}, Div{}, Sub{}, Add{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Mod{}, }, Assign{Sub{}, }, Assign{}, }, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, Print{IfExp{Compare{Mod{}, NotEq{}, Mod{}, }, Str{}, Str{}, }, }, }, Print{}, }, Print{}, }, }, }
1;root{Module{FunctionDef{For{Call{Div{}, }, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{Str{}, }, For{Call{}, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{In{}, Call{}, }, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{Str{}, }, For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, If{Compare{Mod{}, }, For{Call{}, If{Compare{Mod{}, }, Print{}, Print{}, }, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Add{}, }, Compare{Add{}, }, Compare{Sub{}, }, Compare{Sub{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Add{}, }, Compare{Add{}, }, Compare{Add{}, }, Compare{Sub{}, }, Compare{Sub{}, }, Compare{Sub{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, Print{}, For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, If{Compare{Str{}, }, Print{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, For{Call{Div{}, }, Print{Str{}, Str{}, }, }, Print{}, For{Call{Div{}, }, Print{Str{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{Str{}, }, For{Call{}, If{Compare{Add{}, Mod{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, Print{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Pow{}, }, Print{Str{}, Str{}, }, Print{}, For{Call{Div{}, }, Print{Str{}, Str{}, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, For{Call{}, For{Call{}, If{If{Print{Str{}, }, Assign{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, For{Call{}, Print{}, If{Compare{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Assign{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, }, For{Call{}, If{Compare{Mod{}, }, Expr{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Print{Call{Attribute{Str{}, }, ListComp{Str{}, comprehension{Call{Div{}, }, }, }, }, }, Print{Call{Attribute{Str{}, }, ListComp{Str{}, comprehension{Call{Div{}, }, }, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, BoolOp{And{}, Mod{}, Mod{}, }, BoolOp{And{}, UnaryOp{Not{}, Mod{}, }, UnaryOp{Not{}, Mod{}, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Print{Str{}, }, Assign{}, }, If{UnaryOp{Not{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, If{For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, Print{Str{}, }, }, If{Compare{Mod{}, NotEq{}, }, AugAssign{Add{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{Str{}, Str{}, }, }, For{Call{}, For{Call{}, If{Compare{Mod{}, }, Print{}, Print{}, }, }, Print{}, Assign{Tuple{}, Tuple{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, If{Compare{Sub{}, }, Print{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Assign{Str{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Str{}, }, Expr{}, }, }, }, }, }, }
1;root{Module{FunctionDef{If{Compare{Mod{}, }, For{Call{Div{}, }, For{Call{Div{}, }, Print{Str{}, }, Print{Str{}, }, }, Print{}, For{Call{Div{}, }, Expr{}, }, }, }, }, }, }
1;root{Module{}, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Expr{Call{}, }, Expr{Call{}, }, }, }, }, FunctionDef{For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, If{Compare{Mod{}, }, For{Call{}, Expr{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{Str{}, Str{}, }, }, Expr{Call{Attribute{}, }, }, Assign{}, Assign{}, For{Call{Mult{}, }, Print{Subscript{Index{Mod{}, Add{}, Mod{}, }, }, }, If{Assign{}, AugAssign{Add{}, }, Print{}, }, Expr{Mod{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{Str{}, Str{}, }, }, Expr{Call{Attribute{}, }, }, For{Call{}, For{Call{}, Print{Subscript{Index{Mod{}, Add{}, Mod{}, }, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Compare{Mod{}, Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, AugAssign{Add{}, }, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, Print{Str{}, Mult{}, FloorDiv{}, Sub{}, Add{}, Str{}, }, Print{Str{}, Mult{}, FloorDiv{}, Sub{}, Add{}, Str{}, }, }, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, For{Call{Add{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{}, For{Call{}, AugAssign{Add{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Compare{Add{}, Mod{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{FloorDiv{}, }, For{Call{FloorDiv{}, }, Print{Str{}, }, }, Print{Str{}, }, For{Call{FloorDiv{}, }, Print{Str{}, }, }, Print{Str{}, }, }, For{Call{FloorDiv{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Print{}, If{Compare{Mod{}, NotEq{}, }, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, If{Compare{Mod{}, NotEq{}, }, Print{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{FloorDiv{}, }, For{Call{FloorDiv{}, }, Print{Str{}, Str{}, }, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, }, Print{}, For{Call{FloorDiv{}, }, Print{Str{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, AugAssign{Add{}, }, }, If{Compare{Mod{}, }, AugAssign{Sub{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, While{Compare{NotEq{}, }, For{Call{}, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{NotEq{}, }, If{Compare{Mod{}, }, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Print{Str{}, }, }, For{Call{Div{}, }, Print{Str{}, }, Print{Str{}, }, }, Print{}, }, Print{}, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, For{Call{Call{Div{}, }, }, Print{Str{}, }, }, If{Compare{Mod{}, NotEq{}, }, For{Call{}, Print{Str{}, }, }, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Div{}, Add{}, }, Expr{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, }, For{Call{}, If{Compare{Mod{}, }, For{Subscript{Slice{}, }, Print{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{}, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, FunctionDef{For{Call{Add{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, If{Compare{Sub{}, }, Print{Str{}, Add{}, Str{}, }, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, If{Compare{Mod{}, }, Assign{Str{}, }, Assign{Str{}, }, }, For{Call{}, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Div{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, Print{Str{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{}, Assign{Tuple{}, Tuple{}, }, For{Call{}, If{Compare{Mod{}, }, Print{}, Print{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{BoolOp{Or{}, Compare{Mod{}, Add{}, Mod{}, }, Compare{Mod{}, Add{}, Mod{}, }, }, Print{Str{}, }, Print{Str{}, }, }, }, Print{}, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, For{Call{}, For{Call{FloorDiv{}, }, Print{}, }, If{Compare{Mod{}, NotEq{}, }, Print{}, }, Print{}, Assign{}, Assign{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, Print{}, For{Call{Add{}, }, Assign{Add{}, Mod{}, }, If{Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{}, For{Call{}, If{Compare{Mod{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Str{}, }, Expr{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, For{Call{}, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, }, }, Assign{}, }, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, NotEq{}, }, For{Call{Add{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, For{Call{Div{}, }, Print{Str{}, Add{}, Str{}, }, }, For{Call{Div{}, }, Print{Str{}, Add{}, Str{}, }, }, }, }, }, Print{}, }, }
1;root{Module{FunctionDef{If{Assign{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, Assign{Str{}, }, }, For{Call{}, Print{}, If{Compare{Str{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, Mult{}, FloorDiv{}, Add{}, }, For{Call{}, Print{Subscript{Slice{Mod{}, Mult{}, Mod{}, Mult{}, Add{}, Mult{}, Sub{}, }, }, }, }, }, }, }
