226;root{Module{FunctionDef{Assign{Str{}, }, For{Call{Attribute{}, Str{}, }, If{Compare{Call{}, Gt{}, }, AugAssign{Add{}, }, AugAssign{Add{}, Str{}, }, }, }, Return{}, }, }, }
22;root{Module{FunctionDef{Assign{ListComp{Add{}, Str{}, comprehension{Call{Attribute{}, Str{}, }, }, }, }, Return{Call{Attribute{Str{}, }, ListComp{comprehension{}, }, }, }, }, }, }
21;root{Module{FunctionDef{Assign{Str{}, Add{}, }, Assign{List{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Compare{Str{}, }, Expr{Call{Attribute{}, Subscript{Index{Add{}, }, }, }, }, }, }, For{Call{Call{}, }, Expr{}, }, }, }, }
10;root{Module{FunctionDef{Assign{List{}, }, Assign{}, For{Call{Call{}, }, If{AugAssign{Add{}, List{}, }, Assign{}, }, If{Compare{Str{}, }, Assign{}, }, }, Return{Call{Attribute{Str{}, }, }, }, }, }, }
3;root{Module{FunctionDef{Assign{Str{}, }, Assign{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Str{}, }, Compare{Subscript{Index{Add{}, }, }, Str{}, }, }, Assign{Add{}, }, If{BoolOp{And{}, Compare{Call{}, Gt{}, }, Compare{Gt{}, }, }, Assign{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, If{Compare{NotEq{}, Str{}, }, Expr{Call{Attribute{}, }, }, }, For{Call{Call{}, }, If{Compare{Subscript{Index{Sub{}, }, }, Str{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{Attribute{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{If{Compare{Str{}, }, Return{Str{}, }, }, Assign{Call{Attribute{}, Str{}, }, }, Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, Assign{}, If{Compare{Call{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{Str{}, }, For{Call{Call{}, }, If{BoolOp{And{}, BoolOp{Or{}, Compare{Call{Str{}, }, LtE{}, LtE{}, Call{}, Call{Str{}, }, }, Compare{Call{Str{}, }, LtE{}, LtE{}, Call{}, Call{Str{}, }, }, }, }, AugAssign{Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Str{}, }, Compare{Subscript{Index{Add{}, }, }, Str{}, }, }, AugAssign{Add{}, Str{}, }, }, If{BoolOp{Or{}, BoolOp{And{}, Compare{Subscript{Index{Sub{}, }, }, Str{}, }, Compare{NotEq{}, Str{}, }, }, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{}, }, If{Compare{Str{}, }, Assign{Add{}, Subscript{Index{Add{}, }, }, }, }, If{BoolOp{And{}, Compare{Str{}, }, Compare{Subscript{Index{Add{}, }, }, Str{}, }, }, Assign{Add{}, Str{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Call{Attribute{}, Str{}, }, NotEq{}, }, AugAssign{Add{}, Subscript{Index{Call{Attribute{}, Str{}, }, Add{}, }, }, }, Assign{Subscript{Slice{Call{Attribute{}, Str{}, }, Add{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Assign{List{}, }, Assign{List{}, }, For{Assign{Call{Attribute{}, Str{}, }, }, Assign{List{}, }, For{Expr{Tuple{Call{Attribute{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, If{Compare{NotEq{}, Str{}, }, AugAssign{Add{}, }, }, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Call{}, Gt{}, Sub{}, }, Compare{Subscript{Index{Sub{}, }, }, Str{}, }, }, AugAssign{Add{}, }, }, }, }, }, }
