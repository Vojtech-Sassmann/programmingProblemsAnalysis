155;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, }, }, Return{}, }, }, }
61;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Assign{Str{}, }, For{If{BoolOp{Or{}, Compare{Call{}, Lt{}, Call{}, }, BoolOp{And{}, Compare{Call{}, Call{}, }, Compare{Gt{}, }, }, }, Assign{}, }, }, Return{}, }, }, }
10;root{Module{FunctionDef{Assign{}, Assign{List{}, }, Assign{Call{Attribute{}, Str{}, }, }, For{If{Compare{Call{}, Gt{}, }, Assign{Call{}, }, }, }, For{If{Compare{Call{}, }, Expr{Attribute{}, }, }, }, }, }, }
9;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Assign{}, For{Call{Call{}, }, Assign{}, Assign{Call{}, }, For{Call{}, AugAssign{Add{}, }, }, If{Compare{Gt{}, Call{}, }, Expr{}, }, }, }, }, }
5;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Assign{}, Assign{}, For{Call{Call{}, }, If{Compare{Str{}, }, Assign{Str{}, }, Assign{}, Expr{}, }, }, }, }, }
4;root{Module{FunctionDef{Assign{Str{}, }, Assign{Call{Attribute{}, Str{}, }, }, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Call{}, Gt{}, Call{Subscript{Index{Sub{}, }, }, }, }, Compare{Call{}, Lt{}, Call{Subscript{Subscript{Index{Sub{}, }, }, }, }, }, }, Assign{}, }, }, Return{}, }, }, }
2;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, }, }, Assign{}, Assign{}, While{Compare{Add{}, Lt{}, Call{}, }, If{Compare{Call{}, Gt{}, Call{Subscript{Index{Add{}, }, }, }, }, Assign{}, Assign{Subscript{Index{Add{}, }, }, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, Lambda{Call{}, Sub{}, Call{}, }, }, }, Assign{Call{}, }, Assign{List{}, }, For{If{Compare{Call{}, }, Expr{Call{Attribute{}, }, }, }, }, Expr{Call{Attribute{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Assign{Dict{List{}, }, }, For{If{Compare{Call{}, NotIn{}, }, Assign{Subscript{Index{Call{}, }, }, List{}, }, }, Expr{Call{Attribute{Subscript{Index{Call{}, }, }, }, }, }, }, Assign{Subscript{Index{Call{Call{Attribute{}, }, }, }, }, }, Expr{Call{Attribute{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{Attribute{}, }, }, Expr{Call{Attribute{}, }, }, Assign{ListComp{Call{}, comprehension{}, }, }, Assign{Subscript{Slice{}, }, }, Expr{Call{Attribute{}, }, }, Assign{Subscript{Index{Call{}, Sub{}, }, }, }, Assign{}, Assign{}, While{Compare{Lt{}, }, Assign{}, AugAssign{Add{}, }, }, Expr{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, Assign{Str{}, }, For{Call{Call{}, Add{}, }, If{Compare{Call{Subscript{Index{Sub{}, }, }, }, Gt{}, Call{}, }, Assign{Subscript{Index{Sub{}, }, }, }, If{Compare{Call{Subscript{Index{Sub{}, }, }, }, Call{}, }, If{Compare{Call{Subscript{Subscript{Index{Sub{}, }, }, }, }, Lt{}, Call{}, }, Assign{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{Attribute{}, Str{}, }, }, For{Call{Call{}, }, For{Call{Call{}, Sub{}, Sub{}, }, If{Compare{Call{}, Gt{}, Call{Subscript{Index{Add{}, }, }, }, }, Assign{Tuple{Subscript{Index{Add{}, }, }, }, Tuple{Subscript{Index{Add{}, }, }, }, }, }, }, }, }, }, }
