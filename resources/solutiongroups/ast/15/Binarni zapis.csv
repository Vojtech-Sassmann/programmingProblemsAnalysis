217;root{Module{FunctionDef{Assign{Str{}, }, While{Compare{Gt{}, }, If{Compare{Mod{}, }, Assign{Str{}, Add{}, }, Assign{Str{}, Add{}, }, }, Assign{FloorDiv{}, }, }, Print{}, }, }, }
34;root{Module{FunctionDef{Assign{Str{}, }, While{Compare{Gt{}, }, AugAssign{Add{}, Call{Mod{}, }, }, Assign{Sub{}, Mod{}, Div{}, }, }, AugAssign{Add{}, Call{}, }, Print{Subscript{Slice{}, }, }, }, }, }
15;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, While{Compare{Gt{}, }, If{Compare{Mod{}, }, Assign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, Assign{FloorDiv{}, }, }, For{Call{Call{}, }, AugAssign{Add{}, Subscript{Index{UnaryOp{USub{}, }, Sub{}, }, }, }, }, Print{}, Return{}, }, }, }
10;root{Module{FunctionDef{If{Print{}, If{Print{}, If{Print{}, If{Print{}, }, }, }, }, }, }, }
8;root{Module{FunctionDef{Assign{}, Assign{List{}, }, While{Compare{NotEq{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, Str{}, }, }, Assign{Div{}, }, Expr{Call{Attribute{}, Str{}, }, }, Expr{}, }, }, }, }, }
7;root{Module{FunctionDef{Print{Subscript{Call{}, Slice{}, }, }, }, FunctionDef{Assign{Str{}, }, If{Return{Str{}, }, Return{Call{Mod{}, }, Add{}, Call{FloorDiv{}, }, }, }, }, }, }
5;root{Module{FunctionDef{Assign{List{}, }, While{Compare{Gt{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, Expr{Call{Attribute{}, }, }, }, Assign{Call{Div{}, }, }, }, Expr{Call{Attribute{}, }, }, For{Subscript{Slice{}, }, Print{}, }, }, }, }
3;root{Module{FunctionDef{Assign{List{}, }, Assign{Str{}, }, While{Compare{Gt{}, }, Assign{Mod{}, }, Assign{FloorDiv{}, }, Expr{Call{Attribute{}, }, }, }, Expr{Call{Call{Attribute{}, }, }, }, For{Assign{Add{}, Call{}, }, }, Print{}, }, }, }
3;root{Module{FunctionDef{Assign{Str{}, }, Assign{}, Assign{}, For{Call{}, Assign{Sub{}, }, If{Compare{Sub{}, Pow{}, GtE{}, }, Assign{Sub{}, Pow{}, }, Assign{Add{}, Str{}, }, Assign{Add{}, Str{}, }, }, }, Print{}, }, }, }
3;root{Module{FunctionDef{Assign{}, Assign{List{}, }, Assign{List{}, }, While{Compare{Gt{}, }, Expr{Call{Attribute{}, Mod{}, }, }, AugAssign{FloorDiv{}, }, Print{}, AugAssign{Add{}, }, }, For{Call{Call{}, Add{}, }, Expr{Call{Attribute{}, Subscript{Index{UnaryOp{USub{}, }, }, }, }, }, }, }, Expr{Call{}, }, }, }
2;root{Module{FunctionDef{Assign{Call{}, }, Expr{Call{Attribute{}, }, }, Assign{List{}, }, For{If{Compare{Div{}, Pow{}, GtE{}, }, AugAssign{Sub{}, Pow{}, }, Expr{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, Assign{List{}, }, While{Compare{NotEq{}, }, Expr{Call{Attribute{}, Mod{}, }, }, Assign{Call{Div{}, }, }, }, For{Call{Call{}, }, Print{Subscript{Index{UnaryOp{USub{}, Add{}, }, }, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, For{Call{Call{}, }, If{Compare{Subscript{Index{UnaryOp{USub{}, }, Sub{}, }, }, Str{}, }, AugAssign{Add{}, Pow{}, }, }, }, Return{}, }, }, }
2;root{Module{FunctionDef{For{Call{}, If{Compare{Sub{}, Pow{}, GtE{}, }, Assign{Add{}, }, }, }, Assign{Str{}, }, While{Compare{NotEq{}, }, AugAssign{Sub{}, }, If{Compare{Sub{}, Pow{}, GtE{}, }, AugAssign{Add{}, Str{}, }, Assign{Sub{}, Pow{}, }, AugAssign{Add{}, Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{Assign{}, Assign{Str{}, }, Assign{}, While{Compare{Gt{}, }, Assign{Mult{}, }, Assign{Add{}, }, }, While{Compare{Gt{}, }, Assign{Div{}, }, If{Compare{GtE{}, }, Assign{Add{}, Str{}, }, Assign{Sub{}, }, Assign{Add{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{If{Return{}, }, Assign{Str{}, }, While{AugAssign{Add{}, Call{Mod{}, }, }, AugAssign{FloorDiv{}, }, }, Assign{Str{}, }, For{Call{Call{}, Sub{}, }, AugAssign{Add{}, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, While{Compare{NotEq{}, }, If{Compare{Mod{}, }, Assign{Subscript{Slice{}, }, Add{}, Str{}, Add{}, Subscript{Slice{}, }, }, Assign{Div{}, }, Assign{Subscript{Slice{}, }, Add{}, Str{}, Add{}, Subscript{Slice{}, }, }, Assign{Sub{}, Div{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Lt{}, }, Assign{Pow{}, }, AugAssign{Add{}, }, }, Assign{}, While{BoolOp{Or{}, Compare{Gt{}, }, Compare{Gt{}, }, }, AugAssign{Sub{}, }, If{Compare{GtE{}, Pow{}, }, AugAssign{Sub{}, Pow{}, }, AugAssign{Mult{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{}, While{If{Compare{Pow{}, Gt{}, }, AugAssign{Sub{}, }, Break{}, }, AugAssign{Add{}, }, }, For{Call{Add{}, }, If{Compare{Gt{}, Pow{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Sub{}, Pow{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, While{Compare{Gt{}, }, Assign{}, While{Compare{Pow{}, LtE{}, }, AugAssign{Add{}, }, }, Expr{Call{Attribute{}, Sub{}, }, }, Assign{Sub{}, Pow{}, Sub{}, }, }, Assign{ListComp{comprehension{Call{Add{}, }, }, }, }, For{Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, While{Compare{Gt{}, }, If{Compare{Mod{}, }, Assign{Str{}, Add{}, }, }, If{Compare{Mod{}, }, Assign{Str{}, Add{}, }, }, If{Compare{Mod{}, }, Assign{Str{}, Add{}, }, }, If{Compare{Mod{}, }, Assign{Str{}, Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, While{Compare{Gt{}, }, AugAssign{Add{}, Call{Mod{}, }, }, Assign{FloorDiv{}, }, }, AugAssign{Add{}, Call{Mod{}, }, }, Assign{FloorDiv{}, }, If{AugAssign{Add{}, Str{}, }, }, For{Call{Call{}, }, AugAssign{Add{}, Subscript{Index{Call{}, Sub{}, Sub{}, }, }, }, }, Print{}, }, }, }
