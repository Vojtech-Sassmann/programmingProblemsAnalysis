455;root{Module{FunctionDef{If{Return{}, }, Return{Call{Mod{}, }, }, }, }, }
365;root{Module{FunctionDef{Assign{}, Assign{}, If{Compare{Gt{}, }, Assign{}, Assign{}, }, For{Call{Add{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Assign{}, }, }, Return{}, }, }, }
22;root{Module{FunctionDef{If{Compare{Gt{}, }, Assign{}, While{Compare{Gt{}, }, Assign{Mod{}, }, Assign{}, Assign{}, }, Return{}, Assign{}, While{Compare{Gt{}, }, Assign{Mod{}, }, Assign{}, Assign{}, }, }, }, }, }
12;root{Module{FunctionDef{Assign{}, If{Compare{Gt{}, }, While{Compare{LtE{}, }, Assign{Mod{}, }, Assign{Mod{}, }, If{If{Assign{}, }, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
5;root{Module{FunctionDef{Assign{}, While{If{BoolOp{Or{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Break{}, }, If{Compare{Gt{}, }, Assign{Mod{}, }, Assign{Mod{}, }, }, }, If{Compare{Lt{}, }, Return{}, Return{}, }, }, }, }
5;root{Module{FunctionDef{Assign{List{}, }, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Expr{Call{Attribute{}, }, }, }, }, Assign{Subscript{Index{Call{}, Sub{}, }, }, }, Return{}, }, }, }
4;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Lt{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, AugAssign{Mult{}, }, AugAssign{Div{}, }, AugAssign{Div{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
3;root{Module{FunctionDef{Assign{}, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, If{Compare{Gt{}, }, Assign{}, }, }, }, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, If{Compare{Gt{}, }, Expr{}, }, }, }, }, }, }
3;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Call{}, Mod{}, Call{}, }, Print{Call{}, }, If{Compare{BoolOp{And{}, Call{}, Call{}, }, Mod{}, }, Print{}, }, }, }, }, }, }
3;root{Module{FunctionDef{If{Compare{GtE{}, }, Assign{}, Assign{}, Assign{}, Assign{}, }, While{Compare{Mod{}, NotEq{}, }, Assign{Call{Div{}, }, }, Assign{}, Assign{Sub{}, Mult{}, }, Assign{}, }, Return{}, }, }, }
2;root{Module{FunctionDef{While{BoolOp{And{}, Compare{NotEq{}, }, Compare{NotEq{}, }, Compare{NotEq{}, }, }, If{BoolOp{And{}, Compare{Gt{}, }, Compare{NotEq{}, }, }, Assign{Mod{}, }, }, If{BoolOp{And{}, Compare{Lt{}, }, Compare{NotEq{}, }, }, Assign{Mod{}, }, }, }, If{Compare{Gt{}, }, Return{}, }, If{Compare{Gt{}, }, Return{}, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, Expr{Call{Attribute{}, }, }, Expr{Call{Attribute{}, }, }, While{Compare{Call{}, Gt{}, }, Expr{Call{Attribute{}, }, }, Assign{Call{Attribute{}, }, Mod{}, }, If{Expr{Call{Attribute{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{If{Compare{Mod{}, }, Return{}, If{Compare{Mod{}, }, Return{}, If{Compare{Lt{}, }, Assign{}, While{Compare{Gt{}, }, AugAssign{Sub{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Return{}, Assign{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Lt{}, }, AugAssign{Add{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, Compare{Gt{}, }, Compare{Mod{}, Add{}, NotEq{}, }, Compare{Mod{}, Add{}, NotEq{}, }, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, Assign{}, Return{Tuple{}, }, }, FunctionDef{If{Compare{Lt{}, }, Expr{Call{}, }, }, While{Compare{Mod{}, NotEq{}, }, Assign{Mod{}, }, Assign{}, Assign{}, }, Return{}, }, }, }
