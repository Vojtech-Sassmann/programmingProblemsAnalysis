1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Mod{}, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, Return{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, AugAssign{Add{}, Mult{}, BoolOp{Or{}, Mod{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, AugAssign{Add{}, Mult{}, UnaryOp{Not{}, Mod{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Compare{Add{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{Compare{Mod{}, }, comprehension{Call{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{Call{Compare{Mod{}, }, }, comprehension{Call{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{Call{Compare{Mod{}, }, }, comprehension{Call{Add{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{Assign{List{}, }, FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{ListComp{comprehension{Call{Div{}, }, Compare{Mod{}, Add{}, }, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{ListComp{comprehension{Call{Add{}, Div{}, }, Compare{Mod{}, }, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Assign{Mod{}, }, If{Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{}, }, While{Compare{Gt{}, Pow{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Sub{}, }, }, If{Compare{NotEq{}, }, Assign{Sub{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{}, }, While{Compare{Gt{}, Pow{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Sub{}, }, }, If{Compare{Pow{}, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{}, }, While{Compare{Gt{}, Pow{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Sub{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{}, }, While{Compare{Gt{}, Pow{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Sub{}, }, }, If{Compare{Mod{}, Pow{}, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{Div{}, }, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{Div{}, }, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{If{Compare{Mod{}, }, Assign{}, Assign{}, }, For{Call{Call{Div{}, }, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{If{Compare{Mod{}, }, Assign{}, Assign{}, }, For{Call{Call{Div{}, }, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, Pass{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Mult{}, }, }, }, }
1;root{Module{FunctionDef{Return{Mult{}, }, }, }, }
1;root{Module{FunctionDef{Return{Mult{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Print{}, Assign{Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{NotEq{}, }, Assign{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{If{Assign{}, Assign{}, }, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Pow{}, LtE{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{FloorDiv{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Print{}, }, }, }, FunctionDef{Return{Call{Call{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, Print{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Return{Div{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Gt{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{FloorDiv{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Mod{}, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Mult{}, LtE{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{Mult{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Mult{}, Lt{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, AugAssign{Mult{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Mult{}, Lt{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, AugAssign{Mult{}, }, If{Compare{Mod{}, Mult{}, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Global{}, Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Lt{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, For{Call{}, Assign{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, If{Assign{}, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Print{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Expr{Mod{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{}, If{Compare{Mod{}, }, Return{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{BoolOp{Or{}, Compare{Mod{}, }, Compare{Mod{}, }, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, If{Compare{Gt{}, }, For{Call{Div{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, If{Compare{Gt{}, }, For{Call{Div{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, If{Compare{Gt{}, }, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{BoolOp{And{}, Compare{Gt{}, }, Compare{Mod{}, }, }, Assign{Add{}, }, }, }, Return{}, Assign{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, Assign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{If{Return{}, }, Assign{}, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{Compare{Mod{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, Return{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Lt{}, }, AugAssign{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{ImportFrom{alias{}, }, FunctionDef{Assign{List{}, }, Assign{}, While{Compare{LtE{}, Call{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, Expr{Call{Attribute{}, FloorDiv{}, }, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, AugAssign{Add{}, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Mult{}, Div{}, Mult{}, }, }, }, }
1;root{Module{FunctionDef{Return{Pow{}, Sub{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, }, Return{}, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, Return{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Add{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{FloorDiv{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, Assign{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Assign{}, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{If{Compare{Lt{}, }, Return{}, }, Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Div{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Div{}, Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, AugAssign{Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, FloorDiv{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Assign{Mod{}, }, If{Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, Add{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Assign{Mod{}, }, If{AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, Expr{Call{Attribute{}, }, }, }, }, Return{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Gt{}, }, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Sub{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, While{Compare{Gt{}, }, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Sub{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{UnaryOp{UAdd{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, Assign{Mod{}, }, If{AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{LtE{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, AugAssign{Add{}, Call{Compare{Mod{}, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{}, }, }, }
1;root{Module{Assign{}, FunctionDef{For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, }, Return{}, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Div{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Return{Call{ListComp{comprehension{Call{Add{}, }, Compare{Mod{}, }, }, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{Div{}, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{Call{Compare{Mod{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, Assign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{Pow{}, }, Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{FloorDiv{}, Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{FloorDiv{}, Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, If{Compare{Lt{}, }, Return{}, }, For{Call{FloorDiv{}, Add{}, }, If{UnaryOp{Not{}, Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Add{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, If{Compare{Mod{}, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
