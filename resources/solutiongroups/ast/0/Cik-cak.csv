23;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
21;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
20;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, }, }, }, }, }
16;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }
11;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, }, }, }, }
8;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, NotEq{}, }, Print{}, }, }, }, }, }
8;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, }, }, }
6;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, Compare{Mod{}, }, Compare{Mod{}, Sub{}, }, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
5;root{Module{FunctionDef{Expr{Call{}, }, Expr{Call{}, }, }, FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }
4;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{}, }, }, }, }, }
4;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, NotEq{}, }, Print{}, Print{Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{}, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, }, BoolOp{And{}, Compare{Mod{}, }, }, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Mod{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Expr{}, }, }, }, }, }
2;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Mod{}, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Subscript{Slice{}, }, Add{}, Subscript{Slice{}, }, }, Assign{Call{Attribute{Str{}, }, ListComp{Add{}, Str{}, comprehension{}, }, }, }, Print{Subscript{Slice{Call{}, Div{}, Sub{}, }, }, }, Print{Subscript{Slice{Call{}, Div{}, Call{}, Sub{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Subscript{Slice{}, }, Add{}, Subscript{Slice{}, }, }, Assign{Call{Attribute{Str{}, }, }, }, If{Compare{Call{}, Mod{}, }, AugAssign{Add{}, Str{}, }, }, Print{Call{Attribute{Str{}, }, Subscript{Slice{Call{}, Div{}, }, }, }, }, Print{Call{Attribute{Str{}, }, Subscript{Slice{Call{}, Div{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Subscript{Slice{}, }, Add{}, Subscript{Slice{}, }, }, Assign{Call{Attribute{Str{}, }, }, }, If{Compare{Call{}, Mod{}, }, Assign{Subscript{Slice{Call{}, Sub{}, Div{}, }, }, Add{}, Str{}, Add{}, Subscript{Slice{Call{}, Sub{}, Div{}, }, }, }, }, Print{Call{Attribute{Str{}, }, Subscript{Slice{Call{}, Div{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, For{Call{Call{}, }, If{Mod{}, Print{}, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Mod{}, Print{}, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{IfExp{Compare{Mod{}, }, Str{}, }, }, }, Print{}, For{Call{Call{}, }, Print{IfExp{Compare{Mod{}, NotEq{}, }, Str{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Call{}, }, For{Call{}, If{Compare{Mod{}, }, Print{}, If{Compare{Lt{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Subscript{Slice{}, }, }, Assign{Subscript{Slice{}, }, }, For{Call{Call{}, }, Print{Str{}, }, }, Print{}, For{Call{Call{}, }, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Mult{}, }, If{Compare{Mod{}, }, If{Compare{Gt{}, Call{}, }, Print{Subscript{Index{Sub{}, Call{}, }, }, }, Print{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, For{If{UnaryOp{Not{}, Call{Attribute{}, }, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{If{Call{Attribute{}, }, Mod{}, Print{}, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, Assign{}, For{AugAssign{Add{}, }, If{UnaryOp{Not{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, Assign{}, For{AugAssign{Add{}, }, If{Mod{}, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, }, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{}, Assign{}, While{Compare{Lt{}, Call{}, }, Assign{}, Print{}, If{Compare{Lt{}, Call{}, Sub{}, }, Assign{Str{}, }, Print{}, }, AugAssign{Add{}, }, }, If{Compare{Str{}, }, Assign{}, }, Expr{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, For{Call{Call{}, }, If{Print{Str{}, }, }, AugAssign{Add{}, Add{}, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{Add{}, Lt{}, Call{}, }, Print{Str{}, }, }, }, Print{}, Print{Str{}, }, For{Call{Call{}, }, Print{Str{}, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{Add{}, Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{Call{}, }, If{Print{}, Assign{}, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{NotEq{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, Print{Str{}, }, Print{}, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{If{Compare{Mod{}, NotEq{}, }, Print{}, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Call{}, Mod{}, }, }, Print{Str{}, }, If{Compare{Mod{}, }, Print{}, If{Compare{NotEq{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Mod{}, }, }, Print{Str{}, }, }, If{BoolOp{And{}, Compare{Mod{}, }, }, Print{Str{}, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Mod{}, AugAssign{Add{}, Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Add{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Mod{}, }, }, Print{}, If{BoolOp{And{}, Compare{Mod{}, }, }, Print{}, }, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, If{Compare{Call{}, Sub{}, }, Print{}, Print{}, Print{Str{}, }, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, Assign{}, If{BoolOp{And{}, Compare{Mod{}, }, }, Print{}, If{BoolOp{And{}, Compare{Mod{}, NotEq{}, }, }, Expr{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, If{Compare{Mod{}, }, For{Call{Sub{}, }, Print{Str{}, }, }, Print{Subscript{Index{Sub{}, }, }, }, For{Call{Sub{}, }, Print{Str{}, }, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, For{Call{Call{}, Sub{}, }, Print{Add{}, Str{}, }, AugAssign{Add{}, }, }, Print{Subscript{Index{Call{}, Sub{}, }, }, }, For{Call{Call{}, Sub{}, }, Print{Str{}, Add{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{Call{}, Add{}, }, If{Compare{Add{}, Mod{}, }, Print{Str{}, }, Print{Subscript{Slice{Sub{}, }, }, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Add{}, Mod{}, Print{Str{}, }, Print{}, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Print{}, Assign{Call{}, }, For{Call{FloorDiv{}, Add{}, }, Print{Str{}, }, Print{Subscript{Index{Mult{}, }, }, }, }, Print{}, For{Call{FloorDiv{}, }, Print{Str{}, }, Print{Subscript{Index{Mult{}, Add{}, }, }, }, }, Expr{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, If{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Assign{Call{}, }, For{Call{}, If{Compare{Mod{}, }, If{Compare{NotEq{}, Sub{}, }, AugAssign{Add{}, Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Mod{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, BoolOp{And{}, BoolOp{Or{}, Compare{Mod{}, }, }, }, BoolOp{And{}, Compare{Add{}, Mod{}, }, }, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Print{}, For{Call{Call{}, }, Print{Str{}, }, Print{}, }, Print{}, For{Call{Call{}, }, Print{Str{}, }, Print{}, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Subscript{Index{Sub{}, }, }, }, }, }, Print{}, For{Call{Call{}, Div{}, }, Print{Str{}, Subscript{Index{Mult{}, Sub{}, }, }, }, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{Subscript{Index{Add{}, Sub{}, }, }, }, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{Lt{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, Print{}, Print{Str{}, }, For{Call{Call{}, }, Print{}, If{Compare{Lt{}, Call{}, Sub{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Print{}, Print{Str{}, }, Assign{}, While{Compare{Mult{}, Lt{}, Call{}, Sub{}, }, Print{Subscript{Index{Mult{}, }, }, }, Print{Str{}, }, AugAssign{Add{}, }, }, If{Compare{Call{}, Mod{}, NotEq{}, }, Print{Subscript{Index{Call{}, Sub{}, }, }, }, Assign{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Print{}, For{Call{Call{}, }, If{If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{List{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{If{Compare{Mod{}, }, Print{Str{}, }, Print{}, }, }, If{If{Compare{Mod{}, }, Expr{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, Compare{Mod{}, Mult{}, Sub{}, }, Compare{Mod{}, Mult{}, Sub{}, Mult{}, Sub{}, Sub{}, }, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, Assign{}, Assign{}, For{Call{Call{}, }, If{AugAssign{Add{}, Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Mod{}, NotEq{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Mod{}, Print{Str{}, }, Print{}, }, }, Print{}, For{Call{Call{}, }, If{Mod{}, Print{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, BoolOp{And{}, Compare{Mod{}, Gt{}, }, Compare{Mod{}, Gt{}, }, }, }, Print{}, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Add{}, Add{}, Mod{}, }, Print{Str{}, }, Print{}, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{}, For{Call{Call{}, Add{}, }, If{Compare{Add{}, Mod{}, }, Print{}, AugAssign{Add{}, }, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Mod{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, Print{}, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, }, AugAssign{Add{}, Str{}, Add{}, Add{}, Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, If{Compare{Call{}, Sub{}, }, Break{}, Print{Str{}, }, }, }, }, Print{Str{}, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, Print{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Print{}, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, NotEq{}, }, }, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{NotEq{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, Print{}, Print{Str{}, }, For{Call{Call{}, }, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, NotEq{}, }, Print{Str{}, }, Print{}, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, NotEq{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, FunctionDef{Expr{Call{}, }, Expr{Call{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Mult{}, Sub{}, }, For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, Compare{Mod{}, }, Compare{Mod{}, Sub{}, }, }, Print{}, Print{Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, If{Compare{Mod{}, }, Print{Str{}, }, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{}, }, Assign{Call{}, Mult{}, }, If{Compare{Lt{}, }, Print{}, AugAssign{Add{}, }, }, If{Assign{}, Print{}, }, If{Compare{Lt{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{}, }, Assign{Call{}, }, If{Compare{Lt{}, }, Print{}, AugAssign{Add{}, }, }, If{Compare{Lt{}, }, Print{Str{}, }, AugAssign{Add{}, }, }, }, Print{}, Assign{}, Expr{}, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Add{}, Add{}, Mod{}, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Print{}, For{Subscript{Slice{}, }, Print{Str{}, }, Print{}, }, Print{}, For{Subscript{Slice{}, }, Print{Str{}, }, Print{}, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{NotEq{}, Call{}, }, }, Print{}, Assign{}, Print{Str{}, }, Assign{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, Assign{Call{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, Print{Tuple{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, Assign{Call{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{}, For{Call{Call{}, }, AugAssign{Add{}, Str{}, Add{}, }, AugAssign{Add{}, Str{}, }, }, For{Call{Call{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, Add{}, }, }, Print{}, Expr{}, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{}, Assign{}, Assign{}, For{Call{}, If{Print{}, }, For{Call{Call{}, }, If{If{Print{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{And{}, Compare{Sub{}, }, }, Print{}, }, If{Compare{Add{}, Mod{}, }, Print{}, Expr{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{If{Compare{Mod{}, NotEq{}, }, Print{Str{}, }, }, If{Compare{Call{}, Div{}, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{UnaryOp{Not{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Mod{}, Print{}, }, }, }, }, }
1;root{Module{FunctionDef{Assign{List{}, }, Assign{List{}, }, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Expr{Call{Attribute{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, }, }, }, }, }
1;root{Module{FunctionDef{FunctionDef{Expr{Call{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, For{Call{Div{}, Sub{}, }, Print{Subscript{Index{Mult{}, }, }, Str{}, }, }, Print{Subscript{Index{Sub{}, }, }, }, For{Call{Div{}, Sub{}, }, Print{Str{}, Subscript{Index{Mult{}, Add{}, }, }, }, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{BoolOp{Or{}, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, }, Print{}, Print{Str{}, }, }, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{If{Compare{Mod{}, }, Print{}, Print{Str{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{If{Compare{Call{}, Mod{}, }, Print{}, For{Subscript{Slice{}, }, Print{Str{}, Add{}, }, }, Print{}, For{Subscript{Slice{}, }, Print{Str{}, Add{}, }, }, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{UnaryOp{Not{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Mod{}, Print{}, }, Expr{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Tuple{}, Tuple{List{}, List{}, }, }, Assign{}, For{If{Compare{Mod{}, NotEq{}, }, Expr{Call{Attribute{}, }, }, Expr{Call{Attribute{}, }, }, }, AugAssign{Add{}, }, }, For{Call{Call{}, Sub{}, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{Call{}, }, If{Compare{Mod{}, }, Print{}, For{Subscript{Slice{}, }, Print{Str{}, Add{}, }, }, Print{}, Print{Str{}, }, For{Subscript{Slice{}, }, Print{Mod{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Subscript{Slice{}, }, Print{}, Print{Str{}, }, }, Print{}, Print{Str{}, }, For{Subscript{Slice{}, }, Print{}, Print{Str{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, UnaryOp{UAdd{}, }, }, Print{}, If{Compare{NotEq{}, Call{}, Sub{}, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, UnaryOp{UAdd{}, }, }, Print{Str{}, }, Print{}, }, }, }, }
1;root{Module{FunctionDef{Assign{}, Assign{List{}, }, Assign{List{Str{}, }, }, For{If{Expr{Call{Attribute{}, Str{}, Add{}, }, }, Expr{Call{Attribute{}, Str{}, }, }, Assign{}, Expr{Attribute{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Print{Subscript{Index{Sub{}, }, }, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, Add{}, }, If{Compare{Mod{}, }, Expr{}, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, Sub{}, }, Print{Str{}, }, }, Print{}, For{Call{Call{}, }, Print{Str{}, }, }, Print{Str{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{Call{}, Gt{}, Add{}, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Call{}, GtE{}, Add{}, }, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, If{Compare{Call{}, GtE{}, Add{}, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Call{}, GtE{}, }, Print{Str{}, }, }, }, }, }, }
1;root{Module{FunctionDef{If{Compare{Call{}, Mod{}, }, For{Call{Call{}, }, Print{Str{}, }, }, For{Call{Call{}, Sub{}, }, Print{Str{}, }, }, Print{}, }, Print{}, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{Assign{Str{}, }, Assign{Str{}, }, For{Call{Call{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, Add{}, }, }, }, }, }, }
1;root{Module{FunctionDef{For{Call{}, For{Call{Call{}, }, If{Compare{Add{}, Mod{}, }, Print{}, Print{Str{}, }, }, }, }, }, Print{}, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Subscript{Slice{Add{}, }, }, }, Print{Str{}, }, }, }, Print{}, For{Call{Call{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Subscript{Slice{Add{}, }, }, }, }, }, }, }, }
1;root{Module{FunctionDef{Expr{Call{}, }, Expr{Call{}, }, }, }, }
1;root{Module{FunctionDef{For{Call{Call{}, }, Print{}, }, }, Expr{}, }, }
