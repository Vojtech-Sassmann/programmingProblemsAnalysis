54;root{Module{FunctionDef{Assign{}, Assign{}, While{Compare{Lt{}, }, Assign{Add{}, }, Assign{Mult{}, }, }, Return{}, }, }, }
def faktorial(n):
    cislo = 1
    i = 0
    while i < n:
        i = i + 1
        cislo = cislo * i
        
    return cislo
 
def faktorial(n):
    a=0
    b=1
    while a<n:
        a+=1
        b*=a
    return b
 
def faktorial(n):
    res=1
    while n>O:
        res=res*n
        n=n-1
    return res
 
def faktorial(n):
    f = 1
    while n > 0:
        f = f * n
        n = n - 1            
    return f 
def faktorial(n):
    f=1
    while n>0:
        f=f*n
        n=n-1
    return f
 
def faktorial(n):
    f=1
    while n>0:
        f=f*n
        n=n-1
    return f
 
def faktorial(n):
    x = n
    i = 1
    n = 1
    while i <= x:
        n = n * i
        i = i + 1
    return n
 
def faktorial(n):
    s = 1
    i = 0
    while i < n:
        i += 1
        s *= i
    return s 
def faktorial(n):
    f = 1
    while n > 0:
        f = f* n
        n = n - 1
    return f
 
def faktorial(n):
    f=1
    while n>0:
        f=f*n
        n=n-1
    return f
 
def faktorial(n):
    i = 1
    while n > 0:
        i = i * n
        n = n - 1
    return i
 
def faktorial(n):
    m = n
    a = 1
    for i in range (m):
        a = a * n
        n = n - 1
    return a
 
def faktorial(n):
    x=1
    while n>0:
        x = x*n
        n=n-1
    return x
 
def faktorial(n):
    f = 1
    while n > 0:
        f = f * n
        n = n - 1
    return f
 
def faktorial(n):
    cislo = n
    vysledek = 1
    while cislo != 0:
        vysledek = vysledek*n
        n = n-1
    return n
 
def faktorial(n):
    vysledek = 1
    while n > 0:
        vysledek = n*vysledek
        n = n-1
    
    return vysledek
 
def faktorial(n):
    f = 1
    while n>0:
        f = f*n
        n = n-1
    return f
 
def faktorial(n):
    fakt=1
    while n!=1:
        fakt=fakt*n
        n-=1
    return fakt
 
def faktorial(n):
    f=1
    while n>0:
        f= f*n
        n = n-1
    return f
 
def faktorial(n):
    num = 1
    while n >=1:
        num =  num*n
        n= n-1
    return num
 
def faktorial(n):
    f=1
    while (n>0):
        f=f*n
        n=n-1
    
    return f
 
def faktorial(n):
    f = 1
    while n > 0:
        f = f*n
        n = n-1
    return f
 
def faktorial (n):
    x=1
    y=1
    for i in range (n-1):
        y=y+1
        x=x*y
    n=x
    return n
 
def faktorial(n):
    nasobok = 1
    while n > 0:
        nasobok = nasobok *n
        n=n-1
    
    return nasobok
 
def faktorial(n):
    faktorial = 1
    while n>0:
        faktorial = faktorial * n
        n = n - 1
    return faktorial
 
def faktorial(n):
    a = 1
    while n<>1:
        a = a*n  
        n -= 1
    return a
 
def faktorial(n):
    cislo = 1
    while n >= 1:
        cislo = cislo * n
        n = n - 1
    return cislo
 
def faktorial(n):
    i = 0
    sum = 1
    while(i != n):
        i += 1
        sum *= i
    return sum
 
def faktorial(n):
    f=1
    while n>0:
        f=f*n
        n=n-1
    return f
 
def faktorial(n):
    soucet = 1
    while n > 0:
        soucet = soucet * n
        n = n - 1
    return soucet
 
def faktorial(n):
    x=1
    while n!=0:
        x=x*n
        n=n-1
        
    print x
 
def faktorial(n):
    f  = 1
    while n > 0:
        f = f * n
        n = n - 1
    return f
 
def faktorial(n):
    fakt1 = n
    nasobic = n-1
    while nasobic != 1:
        fakt1 = fakt1*nasobic
        nasobic -= 1
    return fakt1
 
def faktorial(n):
    f = 1
    while n > 0:
        f = f * n
        n = n - 1
    return f
 
def faktorial(n):
    x=1
    for i in range(n):
        nasobitel = i +1
        x=x*nasobitel
    return x
 
def faktorial(n):
    a = 1
    while n >= 1:
        a = a * n
        n = n - 1
    return a
 
def faktorial(n):
    x = 1
    for i in range(n):
        y = i + 1
        x = x * y
    return x
 
def faktorial(kol):
    prom=0
    pr=1
    for i in range(kol):
        prom= i+1
        pr=pr*prom
    return pr
 
def faktorial(n):
    f=1
    while n > 0:
        f=f*n
        n=n-1
        
    return f
 
def faktorial(n):
    num = 1
    while n >= 1 :
        num = num *n
        n = n - 1   
    return num
 
def faktorial(n):
    f = 1
    while n > 0:
        f = f * n
        n = n-1
    
    
    return f
 
def faktorial(n):
    soucin=1
    while n>0:
        soucin=soucin*n
        n=n-1
    return soucin
        
 
def faktorial(n):
    z=1
    y=1
    for i in range (n):
        z =  z * y
        y=y+1
    return z
 
def faktorial(n):
    a=n
    fakt=1
    while a!=0:
        fakt=fakt*a
        a=a-1
    return fakt
 
def faktorial(n):

    f = n
    while n > 1:
        n -= 1
        f *= n
    return f
 
def faktorial(n):
    a= 1
    while (n>1):
        a = a * n
        n = n - 1
    return a
 
def faktorial(n):
    faktr=1
    while n>0:
        faktr=faktr*n
        n=n-1    
    return faktr
 
def faktorial(n):
    i=1
    g=1
    while i<=n:
        h=i*g
        i=i+1
        g=h
    
    return g
 
def faktorial(n):
    nasob=1
    i=1
    while i!=n:
        i=i+1
        nasob=nasob*i
    return nasob
 
def faktorial(n):
    m=0
    k=1
    for i in range(n):
        m+=1
        k=m*k
    return k
 
def faktorial(n):
    k=2
    v=1
    while k<=n:
        v=v*k
        k=k+1
    return v
 
def faktorial(n):        
    a=1
    i=1    
    while a<=n:
        i=i*a
        a=a+1        
    return i
 
def faktorial(n):
    num = 1
    while n >= 1:
        num = num * n
        n = n - 1
    return num 
def faktorial(n):
    num = 1
    while n >= 1:
        num = num * n
        n = n - 1
    return num
 
