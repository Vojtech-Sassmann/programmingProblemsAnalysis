11;root{Module{FunctionDef{While{Compare{Gt{}, }, If{Compare{Mod{}, }, Print{Str{}, }, Print{Str{}, }, }, Assign{Call{Div{}, }, }, Print{}, }, }, }, }
def binarne(n):
  while n>1:
    if n % 2 == 0: print "0"
    else: print "1"
    n=int(n/2)
    print n
def binarne(n):
  while n>1:
    print n,
    if n % 2 == 0: print "0"
    else: print "1"
    n=int(n/2)
def binarne(n):
    while n>1:
        if n % 2 == 0: print "0"
        else: print "1"
        n=n/2
def binarne(n):
    while n != 0:
        if n%2 == 0: print "0",
        else:
            print "1",
            n -= 1
        n = n/2

def binarne(n):
    while(n>0):
        if n % 2 == 0: print "0",
        else: print "1"
        n=n//2
def binarne(n):
    print "1",
    while n>1:
        
        if n % 2 == 0: 
            print "0",
        else: 
            print "1",
        n/=2

def binarne(n):
    while n!=0:
        if n % 2 == 0: print "0"
        else: print "1"
        n=(n-n%2)/2

def binarne(n):
    while n > 0:
        if n % 2 == 0: print "0",
        else: print "1",
        n = n // 2
    return n



def binarne(n):
    cislo = n
    while cislo > 0:
        if cislo % 2 == 0:
            print "0",
        else:
            print "1",
        cislo = cislo/2

def binarne(n):
    while n !=0:
        if n % 2 == 0: print "0"
        else: print "1"
        n = n // 2

def vyhodnot(binarne):
    while binarne>0:
        if binarne % 2 == 0:
            print "0"
        else:
            print "1"
        binarne = binarne//2
    return 0 
