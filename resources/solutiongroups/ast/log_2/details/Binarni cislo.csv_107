1;root{Module{FunctionDef{For{Call{Call{}, }, If{BoolOp{And{}, Compare{NotEq{}, Str{}, }, Compare{NotEq{}, Str{}, }, }, Return{}, }, }, Assign{Call{}, }, Assign{}, Assign{}, While{Compare{Gt{}, }, If{Compare{Mod{}, }, AugAssign{Add{}, Pow{}, }, }, Assign{Call{Div{}, }, }, AugAssign{Add{}, }, }, Return{}, }, }, }
def vyhodnot(n):
    for i in range(len(n)):
        if n[i]!="1" and n[i]!="0" : return 0
    h=int(n)
    i=0
    c=0
    while (h>0):
        if (h % 10)==1: c+=2**i
        h=int(h/10)
        i+=1
    return c
 
