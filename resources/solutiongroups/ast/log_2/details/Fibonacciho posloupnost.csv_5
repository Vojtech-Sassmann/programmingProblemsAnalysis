13;root{Module{FunctionDef{Assign{}, Assign{}, Print{}, While{Compare{Lt{}, }, Print{}, Assign{Add{}, }, Assign{Sub{}, }, AugAssign{Add{}, }, }, }, }, }
def fibonacci(n):
    a=b=1
    i=1
    print i,
    while i < n:
        print a,
        a=a+b
        b=a-b
        i+=1
 
def fibonacci(n):
    a = 1
    b = 1
    c = 0
    print 1,
    while c < n-1:
        print a,
        a = a + b
        b = a - b
        c += 1
 
def fibonacci(n):
    p = 1
    t = 1
    print 1,
    for i in range(n-1):
        print t,
        t += p
        p = t-p
        i += 1 
def fibonacci(n):
    f1 = 0
    f2 = 1
    i = 1
    print f2,
    while n > i:
        print f1 + f2,
        frak = f1 + f2
        f1 = f2
        f2 = frak
        i += 1
 
def fibonacci(n):
    a = 1
    b = 1
    print "1 1",
    pruchod = 2
    while pruchod < n:
        f  = a + b
        a = b
        b = f
        pruchod += 1
        print f,
 
def fibonacci(n):
    b = a = 1
    print a
    while a <= n*n:
        print a,
        a = a + b
        b = a - b
 
def fibonacci(n):
    b = a = 1
    print a,
    while a <= n*n:
        print a,
        a = a + b
        b = a - b
 
def fibonacci(n):
    b = 1
    print b
    while a < n:
        print a,
        a = a + b
        b = a - b 
def fibonacci(n):
    b = a = 1
    
    while a <= n*n:
        print a,
        a = a + b
        b = a - b 
def fibonacci(n):
 a = b = 1
 print b,
 while a < n:
    print a,
    a = a + b
    b = a - b 
def fibonacci(n):
    fib1=0
    fib2=1
    i=1
    print fib2,
    while i < n:
        fib_sum = fib2 + fib1
        fib1 = fib2
        fib2 = fib_sum
        i += 1
        print fib_sum,
    return 1
 
def fibonacci(n):
    i=0
    a=1
    c=0
    b=1
    while i<n:
        print b,
        b=a+c
        c=a
        a=b
        i=i+1
        
 
def fibonacci(n):
    a = b = 1
    print "1",
    while a < 100:
        print a,
        a = a + b
        b = a - b
 
