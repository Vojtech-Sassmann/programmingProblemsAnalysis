2;root{Module{FunctionDef{Assign{Call{}, }, Assign{}, Assign{}, While{Compare{Gt{}, }, If{Compare{Mod{}, NotEq{}, }, AugAssign{Add{}, Pow{}, }, }, AugAssign{Add{}, }, Assign{Call{Div{}, }, }, }, Return{}, }, }, }
def vyhodnot(retezec):
    retezec = int(retezec)
    mocnina = 0
    bin = 0
    while(retezec > 0):
        if retezec % 10 != 0: bin += 2**mocnina
        mocnina += 1
        retezec = int(retezec/10)
    return bin 
def vyhodnot(retezec):
    h=int(retezec)
    i=0
    c=0
    while (h>0):
        if (h % 10)==1: c+=2**i
        h=int(h/10)
        i+=1
    return c
 
