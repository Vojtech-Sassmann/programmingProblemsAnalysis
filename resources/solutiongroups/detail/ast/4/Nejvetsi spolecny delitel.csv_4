53;root{Module{FunctionDef{While{Compare{NotEq{}, }, Assign{Tuple{}, Tuple{Mod{}, }, }, }, Return{}, }, }, }
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)
    return a 
def nsd(a, b):
    while b != 0:
        c = b
        b = a % b
        a = c
    return a
 
def nsd(a, b):
    while a:
        a, b = b % a, a
    return b
 
def nsd(a, b):
    while b!=0:
        (a,b)=(b,a%b)
    return a
 
def nsd(a, b):
    while b:
        a, b = b, a % b
    return a
 
def nsd(a, b):
    while b!=0:
        a,b=b,a%b
    return a
 
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)    
    return a
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a 
def nsd(a, b):
    while a > 0:
        a, b = b % a ,a
    return b
 
def nsd(a, b):
    while b!=0:
        x = b
    return 1
 
def nsd(a, b):
    while b!=0:
        b = a%b
    return b
 
def nsd(a, b):
    while b!=0:
        (a,b)=(b,a%b)
    return a
 
def nsd(a, b):
    while b:
        a,b=b,a%b
    return a
 
def nsd(a, b):
    while b!= 0:
        (a,b) = (b,a%b)
    return a
 
def nsd(a, b):
    while b != 0:
        a, b = b, a % b
    return a
    
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b:
        a,b=b,a%b
    return a
 
def nsd(a, b):
   while b:
      a, b = b, a%b
   return abs(a)
 
def nsd(a, b):
    while a:
        a, b=b%a, a
    return b
 
def nsd(a, b):
    while b:
        a,b = b,a%b
    return a
 
def nsd(a, b):
    while b != 0:
        a, b = b, a % b
    return a
 
def nsd(a, b):
    if a!=0:
        x=nsd(b%a, a)
    else:
        x=b
    return x
 
def nsd(a,b):
    while b:
        a, b = b, a%b
    return a 
def nsd(a, b):
    
    while b<>0:
        a,b=b,a%b
        
    return a
 
def nsd(a, b):
    while b!=0:
        (a,b) = (b, a%b)
    return a
 
def nsd(a, b):
    while b != 0:
        (a,b) = (b,a%b)
    return a
 
def nsd(a, b):
    while b:
        a,b=b,a%b
    return a
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)
    return a 
def nsd(a, b):
    while b!=0:
        (a, b) = (b, a%b)
    return a
    
 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a 
def nsd(a, b):
    a = abs(a)
    while b > 0:
        b, a = a % b, b 
    return a
 
def nsd(a, b):
    while a:
        a, b = b % a, a
    return b
 
def nsd(a, b):
    while b:
        a,b=b,a%b
    return a
 
def nsd(a, b):
    while a:
        a, b = b % a, a
    return b 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)
    return a 
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)
    return a
 
def nsd(a, b):
    while a:
        a, b = b % a, a
    return b
 
def nsd(a, b):
    while b != 0:
        (a,b) = (b, a % b)
    return a 
def nsd(a, b):
     while b > 0:
        a, b = b, a%b
     return a
 
def nsd(a, b):
    while b != 0:
        (a,b) = (b, a % b)
    return a 
def nsd(a, b):
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b != 0:
        (a,b) = (b,a%b)
    return a
 
def nsd(a, b):
    while b != 0:
        (a, b) = (b, a % b)
    return a
 
def nsd(a, b):

 
    while b:
        a, b = b, a%b
    return a
 
def nsd(a, b):
    while b != 0:
        a,b = b, a%b
    return a 
def nsd(a, b):
    while(b):
        a, b = b, a % b

    return a 
def nsd(a, b):
    while b:
        a, b = b, a%b
        
    return a
 
def nsd(x, y):
    while y != 0:
        (x, y) = (y, x % y)
    return x 
