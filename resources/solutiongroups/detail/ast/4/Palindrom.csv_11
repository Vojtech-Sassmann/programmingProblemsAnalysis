12;root{Module{FunctionDef{For{Call{Call{}, }, If{Compare{Subscript{Index{Sub{}, }, }, NotEq{}, Subscript{Index{Call{}, Sub{}, }, }, }, Return{}, }, }, Return{}, }, }, }
def palindrom(text):
    for i in range (1,len(text)):
        if text[(i-1)] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)//2):
     if text[i-1] != text[len(text)-i]:
        return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)//2+1):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)+1):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range (1,len(text)):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(len(text)):
        if text[(0+i)] != text[(-1-i)]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)/2):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(0, len(text)-1):
        if text[i-1] != text[-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(len(text)):
        if text[0+i] != text[len(text)-1-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
def palindrom(text):
    for i in range(1,len(text)//2+1):
        if text[i-1] != text[len(text)-i]:
            return False
    return True
 
