33;root{Module{FunctionDef{For{Call{}, Assign{Str{}, }, For{Call{}, If{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, AugAssign{Add{}, Str{}, }, AugAssign{Add{}, Str{}, }, }, }, Print{}, }, }, }, }
def ctverec(n):
    for i in range(n):
        r = ""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1:
                r+="*"
            else:
                r+="+"
        print r
 
def ctverec(n):
    for i in range(n):
        r=""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1: r+="*"
            else: r+="+"
        print r
 
def ctverec(n):
    for i in range(n):
        x = ""
        for j in range(n):
            if (i == 0 or i == n-1 or j == 0 or j == n-1):
                x += "*"
            else: 
                x += "+"
        print x 
def ctverec(n):
    for i in range (n):
        line = ""
        for j in range(n):
            if (i == 0 or i == n-1 or j == 0 or j == n-1):
                line+="*"
            else:
                line+="+"
        pr 
def ctverec(n):
    for i in range(n):
        outstr = ""
        for j in range(n):
            if i == 0 or i == n-1 or j == 0 or j == n-1:
                outstr += "*"
            else:
                outstr += "+"
 
def ctverec(n):
    for i in range(n):
        line = ""
        for j in range(n):
            if(i == 0 or j == 0 or i == n-1 or j == n-1): line += "*"
            else: line += "+"
        print line
 
def ctverec(n):
    for i in range(n):
        line = ""
        for j in range(n):
            if i == 0 or i == n-1  or j == 0 or j == n-1:
                line+="*"
            else:
                line+="+"
 
def ctverec(n):
    for i in range(n):
        s=""
        for j in range(n):
            if (i==0) or (j==0) or (i==n-1) or (j==n-1): s=s+"*"
            else: s=s+"+"
        print s
 
def ctverec(n):
    for i in range(n):
        text = ""
        for j in range(n):
            if i == 0 or i == n-1 or j == 0 or j == n-1:
                text += "*"
            else:
                text += "+"
        p 
def ctverec(n):
    for i in range (n):
        a=""
        for j in range (n):
            if (i==0 or i==n-1 or j==0 or j==n-1):
                a+="*"
            else: 
                a+="+"
            
        prin 
def ctverec(n):
    for i in range(n):
       radek = ""      
       for j in range(n):
            if (i==0 or j==0 or i==n-1 or j==n-1):
                radek+="*"
            else:
                radek+="+"
       print 
def ctverec(n):
    for i in range(n):
        s=""
        for j in range(n):
            if(i==0 or i == n-1 or j == 0 or j== n-1):
                s+="*"
            else:
                s+="+"
        print s        
 
def ctverec(n):
    for i in range(n):
        ctv=""
        for k in range(n):
            if (i == 0 or i == n-1 or k == n-1 or k == 0):
                ctv+="*"
            else:
                ctv+="+"
        print ct 
def ctverec(n):
    for i in range(n):
        radek = ""
        for j in range(n):
            if i == 0 or i == n - 1 or j == 0 or j == n - 1:
                radek += "*"
            else:
                radek += "+"
 
def ctverec(n):
    for x in range(n):
        ms = ""
        for y in range(n):
           if x == 0 or y == 0 or x == n-1 or y ==n-1:
             ms += "*"
           else:
             ms += "+"
        print ms
 
def ctverec(n):
    for i in range(n):
        text=""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1:
                text+="*"
            else:
                text+="+"
        print text
 
def ctverec(n):
    for i in range(n):
        x=""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1:
                x+="*"
            else:
                x+="+"
        print x
 

def ctverec(n):
    for i in range(n):
        l=""
        for j in range(n):
            
            if i==0 or i==n-1 or j==0 or j == n-1:
                l+="*"
            else:
                l+="+"
        prin 
def ctverec(n):
    for i in range(n):
        a = ""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1:
                a += "*"
            else:
                a += "+"
        print a
 
def ctverec(n):
    for i in range(n):
        radek = ""
        for j in range(n):
            if i==0 or j==0 or j==n-1 or i==n-1:
                radek += "*"
            else:
                radek += "+"
        print 
def ctverec(n):
    for i in range(n):
        riadok=""
        for j in range(n):
            if (i==0) or (j==0) or (i==n-1) or (j==n-1):
                riadok+="*"
            else:
                riadok+="+"
        p 
def ctverec(n):
    for i in range(n):
        line = ""
        for j in range(n):
            if i==0 or i==n-1 or j==0 or j==n-1: line +="*"
            else: line+="+"
        print line
 
def ctverec(n):
    for y in range(n):
        str=""
        for x in range(n):
            if x==0 or y==0 or x==n-1 or y==n-1: str=str+"*"
            else: str=str+"+"
        print str 
def ctverec(n):
    for i in range(n):
        radek = ""
        for j in range(n):
            if i==0 or j==0 or i==n-1 or j==n-1:
                radek += "*"
            else:
                radek += "+"
        print 
def ctverec(n):
    for i in range(n):
        radek = ""
        for j in range(n):
            if i == 0 or i == n-1 or j == 0 or j == n-1:
                radek += "*"
            else:
                radek += "+"
 
def ctverec(n):
    for i in range(n):
        x = ""
        for j in range(n):
            if i == 0 or i == n-1 or j == 0 or j == n-1:
                x = x + "*"
            else:
                x = x + "+"
        prin 
def ctverec(n):
    for i in range(n):
        radek = ""
        for y in range(n):
            if i == 0 or i == n-1 or y== 0 or y==n-1:
                radek += "*"
            else: radek += "+"
        print radek
 
def ctverec(n):
    for z in range (n):
        x=""
        for y in range (n):
            if (z==0 or z==n-1 or y==0 or y==n-1):
                x=x+"*"
            else:
                x=x+"+"
        print x
 
def ctverec(n):
    for y in range(n):
        radek = ""
        for x in range(n):
            if y == 0 or y == n-1 or x == 0 or x == n-1:
                radek += "*"
            else:
                radek += "+"
 
def ctverec(n):
    for i in range(n):
        string = ""
        for a in range(n):
            if i == 0 or i == n-1 or a == 0 or a == n-1:
                string+="*"
            else:
                string+= "+"
 
def ctverec(n):
    for y in range(n):
        l = ""
        for x in range(n):
            if x == 0 or x == n - 1 or y == 0 or y == n - 1:
                l += "*"
            else:
                l += "+"
print l
 
def ctverec(n):
    for i in range (n):
        k=""
        for j in range (n):
            if i==0 or i==n-1 or j == 0 or j == n-1:
                k+="*"
            
            else: k+="+"
        print k
        
 
def ctverec(n):
    for i in range(n):
        a=""
        for j in range(n):
            if (i==0) or (j==0) or (j==n-1) or (i==n-1):
                a=a+"*"
            else:
                a=a+"+"
        print a
 
