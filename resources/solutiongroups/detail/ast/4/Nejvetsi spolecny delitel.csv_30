3;root{Module{FunctionDef{While{Compare{NotEq{}, }, If{Compare{Lt{}, }, Assign{Sub{}, }, If{Compare{Gt{}, }, Assign{Sub{}, }, }, }, }, Return{}, }, }, }
def nsd(a,b):
    while a<>b:
        if a<b:
            b = b-a
        else:
            if a>b:
                a = a-b
    return a
 
def nsd(A, B):
    while (A <> B):
           if (A > B):
            A = A - B 
            if (a < B ):
                B = B - A
    return 1
 
def nsd (a, b):
    while (a!=b):
        
        if (a>b):
            a=a-b
            if (a<b):
                b=b-a
                return b 
