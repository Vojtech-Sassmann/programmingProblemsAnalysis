4;root{Module{FunctionDef{If{Compare{Lt{}, }, Assign{}, Assign{}, }, For{Call{}, If{BoolOp{And{}, Compare{Mod{}, Sub{}, }, Compare{Mod{}, Sub{}, }, }, Return{}, }, }, }, }, }
def nsd(a, b):
    if (a < b):
        max = a
    else:
        max = b
    for i in range(0, max):
        if (a % (max-i) == 0 and b % (max-i) == 0):            
            return i
 
def nsd(a, b):
    if a > b:
        v = a
    else:
        v = b
    for i in range(1,v+1):
        if a % (v-i) == 0 and b % (v-i) == 0:
            return v-i
 
def nsd(a, b):
    if a < b:
        n = a
    else:
        n = b
    for i in range(n+1):
        if a % (n-i) == 0 and b % (n-i) == 0:
            return n-i
 
def nsd(a, b):
    if a<b:
        y=b
    else:
        y=a
    for i in range(y):
        if b%i==0 and a%i==0:
            x=i
    return x
 
