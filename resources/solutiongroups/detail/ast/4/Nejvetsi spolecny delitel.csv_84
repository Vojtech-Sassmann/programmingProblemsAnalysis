1;root{Module{FunctionDef{Assign{}, While{If{BoolOp{Or{}, Compare{Mod{}, }, BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, }, Return{}, AugAssign{Sub{}, }, }, }, Return{}, }, }, }
def nsd(a, b):
    p=a
    while True:
        if b%a==0 or (b%p==0 and a%p==0):
            return p
        else: p-=1
        
    return 1
 
