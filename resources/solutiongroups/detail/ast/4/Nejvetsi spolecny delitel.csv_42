2;root{Module{FunctionDef{Assign{}, Assign{}, While{BoolOp{Or{}, Compare{LtE{}, }, Compare{LtE{}, }, }, If{BoolOp{And{}, Compare{Mod{}, }, Compare{Mod{}, }, }, Assign{Add{}, }, }, }, }, }, }
def nsd(a, b):
    d = 0
    i = 1
    while i <= a or i <= b:
        if a % i == 0 and b % i == 0:
            d = d + 1
         
def nsd(a, b):
    d = 0
    i = 1
    while i <= a or i <= b:
        if a % i == 0 and b % i == 0:
            d = d + 1
        i = i+1
    return d
 
