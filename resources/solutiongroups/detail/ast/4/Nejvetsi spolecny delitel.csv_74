1;root{Module{FunctionDef{Assign{}, If{Compare{Gt{}, }, While{Compare{LtE{}, }, Assign{Mod{}, }, Assign{Mod{}, }, If{If{Assign{}, }, }, AugAssign{Add{}, }, }, }, Return{}, }, }, }
def nsd(a, b):
    n = 1
    if b > a:
        while n <= a:
            x = b % n
            y = a % n
            if x == 0:
                if y == 0:
                    nsd = n
            n +=1
    return nsd 
