3;root{Module{FunctionDef{Assign{}, Assign{Call{}, }, For{Call{}, If{BoolOp{And{}, Compare{NotEq{}, Str{}, }, Compare{NotEq{}, Str{}, }, }, Return{}, }, AugAssign{Add{}, Call{}, Mult{}, Pow{}, Sub{}, Sub{}, }, }, Return{}, }, }, }
def vyhodnot(s):
    x = 0
    n = len(s)
    for i in range(n):
        if i != "0" and i != "1": return 0
        x += int(s[i]) * (2 ** (n-1-i))
    return x
 
def vyhodnot(s):
    x = 0
    n = len(s)
    for i in range(n):
        if s[i] != "0" and s[i] != "1": return 0
        x += int(s[i]) * (2 ** (n-1-i))
    return x
 
def vyhodnot(s):
    x = 0
    n = len(s)
    for i in range(n):
        if s[i] != "0" and s[i] != "1": continue
        x += int(s[i]) * (2 ** (n-1-i))
    return x
 
