7;root{Module{FunctionDef{Assign{ListComp{ListComp{IfExp{BoolOp{Or{}, Compare{Sub{}, }, Compare{Sub{}, }, }, Str{}, Str{}, }, comprehension{Call{}, }, }, comprehension{Call{}, }, }, }, For{Print{Call{Attribute{Str{}, }, }, }, }, }, }, }
def ctverec(n):
        ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
        for line in ctverec:
                print "".join(line) 
def ctverec(n):
        ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
        for line in ctverec:
                print "".join(line) 
def ctverec(n):
        ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
        for line in ctverec:
                print "".join(line)
 
def ctverec(n):
    ctverec = [[ "*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range (n)] for y in range(n)]
    for line in ctverec:
        print "".join(line)
 
def ctverec(n):
        ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
        for line in ctverec:
                print "".join(line) 
def ctverec(n):
    ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
    for i in ctverec:
        print "".join(i) 
def ctverec(n):
        ctverec = [["*" if (x == 0) or (x == n-1) or (y == 0) or (y == n-1) else "+" for x in range(n)] for y in range(n)]
        for line in ctverec:
                print "".join(line) 
