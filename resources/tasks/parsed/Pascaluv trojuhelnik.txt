
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f *= i\n    return f\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print faktorial(n)/ 
def f(n):\n    return n * f(n-1) if n > 1 else 1\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print f(n)/f(k)/f(n-k),\n        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    trojuhelnik = []\n    for x in range(pocet_radku):trojuhelnik.append([])\n    trojuhelnik[0].append("1")\n    for n in range(1,pocet_radku):\n        for k in range(0, n + 1):\n            if k 
def pascaluv_trojuhelnik(pocet_radku):\n    trojuhelnik = []\n    for x in range(pocet_radku):trojuhelnik.append([])\n 
def partialFactorial(stop,start=1):\n    result = 1\n    for i in range(start, stop + 1):\n        result *= i\n        pass\n    return result\n\ndef NoverK(n,k):\n    return int(partialFactorial(n, k+1)/partialFactorial(n-k))\n\nd 
def pascaluv_trojuhelnik(pocet_radku):\n    list = [1]\n    for n in range(pocet_radku):\n        newList = []\n        for i in range(0,len(list)):\n            if i == 0:\n                newList.append(1)\n            else:\n 
def factorial(x):\n    result = 1\n    for n in range(1,x+1):\n        result *= n\n    return result    \n        \n\ndef over(x,y):\n     
def pascaluv_trojuhelnik(pocet_radku):\n    pascal=[[1]]\n    print 1\n    if pocet_radku == 1:\n         return\n    for n in range(1,pocet_radku):\n        line = []\n        for k in range(0, n + 1):\n            if k==0 or k==(n):\ 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for n in range(pocet_radku):\n        for pismeno in radek:\n            print pismeno        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for n in range(pocet_radku):\n        for pismeno in radek:\n            print pismeno        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for n in range(pocet_radku):\n        for pismeno in radek:\n            print pismeno,\n        print\n        dalsi = [1]\n        for i in range(len(radek)-1):\n            d 
def pascaluv_trojuhelnik(n):\n    last = [0]*(n+2)\n    last[0] = 1\n    for m in range(n):\n        row = [0]*(n+2)\n        for k in range(0, m + 1):\n            row[k] = last[k] + last[k-1]\n            print row[k],\n 
def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*factorial(n-1)\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            if k == 0:\n 
 
def pascaluv_trojuhelnik(pocet_radku):\n    c = [1]\n    for i in range(pocet_radku):\n        for x in c:\n            print x,\n        print\n        \n        n = [1]\n        for i in range(len(c)-1):\n            n.append(c[i]+c[ 
def p(x):\n    for y in x:\n        print y,\n    print\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    last = [1]\n    p(last)\n    for i in range(pocet_radku-1):\n        n = [1]\n        for j in range(len(last)-1):\n            n.ap 
def pascaluv_trojuhelnik(pocet_radku):\n    troj =[1]\n    for n in range(pocet_radku):\n        trojs=troj\n        troj=troj+[0]\n        troj[0]=1\n        for k in range(0, n + 1):       \n          if k>0:\n            troj[k]=tr 
def printLine(l):\n    for i in l:\n        print i,\n    print\n\ndef nextRow(prev, n):\n    row = [1 for i in range(n)]\n    for i in range(1, n-1):\n        row[i] = prev[i-1] + prev[i]\n    return row\n    \ndef pascaluv_trojuhel 
def factorial(a):\n    if a == 0:\n        return 1\n    b = 1\n    for i in range(1,a+1):\n        b = b*i\n    return b\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\ 
def pascaluv_trojuhelnik(pocet_radku):\n    posledni = []\n    for n in range(pocet_radku):\n        tento = []\n        for k in range(0, n + 1):\n            if k == n or k ==0:\n                print 1,\n                tento.append(1 
def f(x):\n    f=1\n    for i in range(1,x+1):\n        f*=i\n    return f\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print f(n)/(f(n-k)*f(k)),\n 
def fakt(x):\n    v=1\n    for i in range(1,x+1):\n        v *=i\n    return v    \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(n + 1):\n            print fakt(n)/(fakt(k)*fakt(n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kom(n,k),\n        print\n        \ndef fac(x):\n    a=1\n    for i in range(x):\n        a*=(i+1)\n    r 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek = [1]\n    for n in range(pocet_radku):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek=[1]\n        for i in range(len(aktualni_radek)- 
def pascaluv_trojuhelnik(pocet_radku):\n    l=[1]\n    while(len 
def pascaluv_trojuhelnik(pocet_radku):\n    l=[1]\n    while(len 
def pascaluv_trojuhelnik(pocet_radku):\n    radek1 = [1]\n    radek2 = []\n    if pocet_radku>=1:\n        print 1\n    for n in range(pocet_radku-1):\n        radek2.append(1)\n        for k in range(0, n):\n            radek2.append(rad 
def f(n):\n    if n == 0:\n        return 1\n    for i in range(n-1, 1, -1):\n        n *= i\n    return n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            pri 
def pascaluv_trojuhelnik(raws):\n    triangle = [[1]]\n    for n in range(1,raws):\n        raw=[1]\n        for b in range (n-1):\n            raw.append(triangle[n-1][b]+triangle[n-1][b+1])\n        raw.append(1)\n        triangle.ap 
def pascaluv_trojuhelnik(n):\n    a=[1]\n    for i in range (n):\n        for x in a:\n            print x,\n        print\n        d=[1]\n        for i in range (len(a)-1):\n            d.append (a[i]+a[i+1])\n        d.append(1)\n 
def fact(n):\n    f = 1\n    for i in range(1,n+1):\n        if f==0:\n            f=1\n        else:\n           f=f*i\n    return f\n\ndef kc(n,k):\n    f=fact\n    return f(n)/(f(n-k)*f(k))\n\ndef pascaluv_trojuhelnik(n):\n 
def pascaluv_trojuhelnik(n):\n    a=[1]\n    for n in range(n):\n        for k in a:\n            print k,\n        print\n        d=[1]\n        for i in range(len(a)-1):\n            d.append(a[i]+a[i+1])\n        d.append(1)    \ 
def pascaluv_trojuhelnik(pocet_radku):\n    a = [1]\n    for i in range(pocet_radku):\n        for k in a:\n            print k,\n        print\n        d = [1]\n        for i in range (len(a)-1):\n            d.append (a[i]+a[i+1])\ 
def pascaluv_trojuhelnik(n):\n    radky=[]\n    for i in range(1,n+1):\n        radek=[1]*i\n        for j in range(1,i-1):\n            radek[j]=radky[i-2][j]+radky[i-2][j-1]\n        radky.append(radek)\n    print radky 
def pascaluv_trojuhelnik(pocet_radku):\n    a=[]\n    b=[]\n    for n in range(pocet_radku):\n        a.append(0)\n        b.append(1)\n        \n        for j in range(0,n):\n            b[j+1]=a[j]+a[j+1]\n        a=b[:]\n 
def pascaluv_trojuhelnik(pocet_radku):\n    a=[1]\n    for n in range(pocet_radku):\n        for k in a:\n            print k,\n        print\n        m=[1]\n        for n in range(len(a)-1):\n            m.append(a[n]+a[n+1])\n 
def pascaluv_trojuhelnik(pr):\n    a=[1]\n    for i in range(pr):\n        for j in range(len(a)):\n            print a[j],\n        print ""\n        b=a\n        a=[1]\n        for j in range(len(b)-1):\n            a.append(b[j]+b[j 
def pascaluv_trojuhelnik(pr):\n    a=[1]\n    for i in range(pr):\n        for j in range(len(a)):\n            print a[j],\n        print\n        b=a\n        a=[1]\n        for j in range(len(b)-1):\n            a.append(b[j]+b[j+ 
def radek(K):\n    L = [1]\n    for i in range(1,len(K)):\n        L.append(K[i-1] + K[i])\n    L.append(1)\n    return L\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    K = [1]\n    print K[0]\n    for i in range(pocet_radku-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek=[1]\n    for i in range(pocet_radku):\n        for k in aktualni_radek:\n            print k,\n        print\n        dalsi_radek=[1]\n        for i in range(len(aktualni_radek)-1) 
def pascaluv_trojuhelnik(pocet_radku):\n    radek1 = [1]\n    for n in range(pocet_radku):\n        for k in radek1:\n            print k,\n        print\n        radek2 = [1]\n        for i in range(len(radek1)-1):\n            radek2.ap 
def faktorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * faktorial(n-1)\n\ndef komb_cislo(n,k):\n    return faktorial(n)/(faktorial(n-k)*faktorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in ran 
def pascaluv_trojuhelnik(pocet_radku):\n    last=[1,0]\n    new=[1,1,0]\n    printlist(last)\n    for n in range(1,pocet_radku):\n        printlist(new)\n        last=list(new)\n        for k in range(1,len(last)):\n            new[k]=las 
def pascaluv_trojuhelnik(pocet_radku):\n    arr = [1 for i in range(pocet_radku)]\n    for i in range(pocet_radku):\n        for j in range(i+1):\n        print arr[j],\n        for j in range(i, 0, -1):\n            arr[j] = arr[j] + 
def pascaluv_trojuhelnik(n):\n    a=[1]\n    for i in range(n):\n        for j in a:\n            print j,\n        print\n        b=[1]\n        for k in range(i):\n            b.append(a[k]+a[k+1])\n        b.append(1)\n        a= 
def faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f *= i \n    return f\n\ndef kombinacni(n,k):\n    return faktorial(n) / (faktorial(k) * faktorial(n-k))\n\ndef pascaluv_trojuhelnik(pocetradku):\n    for radek in rang 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n\ndef faktorial(n):\n    f = 1\n    for i in range(1, n+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    zoznam = [1]\n    for i in range(pocet_radku):\n        for j in range (len(zoznam)):\n            print zoznam[j],\n        zoznam = dalsi_riadok(zoznam)\n        print\n        \ndef dalsi_ria 
def fact(n):\n    f = 1\n    for i in range(1, n+1):\n        f *= i\n    return f\n\ndef kombinacne_cislo(n, k):\n    return fact(n) / (fact(k) * fact (n - k))\n                      \ndef pascaluv_trojuhelnik(n):\n    for row in ran 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    row = [1]\n    for r in range(pocet_radku):\n        for k in row:\n            print k,\n        print\n        \n        nrow = [1]\n        for c in range(r):\n            nrow.append(row[c] 
def pascaluv_trojuhelnik(pocet_radku):\n    a =[1]\n    b =[1]\n    for n in range(pocet_radku):\n        a=b[::]\n        \n        for j in range (len(b)):\n            print b[j],\n        print\n        b.insert(0,1)\n        \n 
def pascaluv_trojuhelnik(pocet_radku):\n    riadok = [ 1 ]\n    for i in range(pocet_radku):\n        for j in riadok:\n            print j,\n        print\n        nasledujuci = [ 1 ]\n        for i in range(len(riadok)-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n\ndef faktorial(n):\n    f=1\n    for i in range(1,n+1):\n        f 
def get_val(zoznam, row, col):\n    \n    if(row < 0 or col < 0 or row >= len(zoznam) or col >= len(zoznam[row])):\n        return 0\n    else:\n        return zoznam[row][col]\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    trojuh = [[1]] 
def pascaluv_trojuhelnik(n):\n    riadok = [1]\n    for i in range(n):\n        for k in riadok:\n            print k,\n        print\n        novy_riadok = [1]\n        for i in range(len(riadok)-1):\n            novy_riadok.append(riado 
def fact(n):\n    f = 1\n    for i in range (1, n+1):\n        f = f*i\n    return f\n\ndef komb_cislo(n, k):\n    return fact(n)/(fact(n-k) * fact(k))\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n 
def faktorial(r):\n    f = 1\n    for i in range(1, r+1):\n        f = f*i\n    return f\n\ndef kombinacni_cislo(n, k):\n    if n>=k and k>=0:\n        return faktorial(n)/(faktorial(k)*faktorial(n-k))\n\ndef pascaluv_trojuhelnik(poce 
def factorial(n):\n    a = 1\n    for i in range(1,n+1):\n        a = a*i\n    return a\n\ndef kombinacni_cislo(n,k):\n    return factorial(n)/ (factorial(n-k)*factorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in rang 
def pascaluv_trojuhelnik(n):\n    riadok=[1]\n    for i in range(n):\n        for x in riadok:\n            print x,\n        print\n        dalsi=[1]\n        for i in range(len(riadok)-1):\n            dalsi.append(riadok[i]+riadok[i% 
def pascaluv_trojuhelnik(n):\n    if n == 0:\n        return[]\n    elif n == 1:\n        return [[1]]\n    else:\n        new_row = [1]\n        result = triangle(n-1)\n        last_row = result[-1] 
def pascaluv_trojuhelnik(n):\n    if n == 0:\n        return[]\n    elif n == 1:\n        return [[1]]\n    else:\n        new_row = [1]\n        result = triangle(n-1)\n        last_row = result[-1] 
def pascaluv_trojuhelnik(n):\n    if n == 0:\n        return[]\n    elif n == 1:\n        return [[1]]\n    else:\n        new_row = [1]\n        result = triangle(n-1)\n        last_row = result[-1]\n 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    dalsiRadek = [1]\n    for n in range(pocet_radku):\n        for k in radek:\n            print k,\n        print\n        for x in range(len(radek)-1):\n            dalsiRadek.a 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for n in range(pocet_radku):\n        for k in radek:\n            print k,\n        print\n        dalsiRadek = [1]\n        for x in range(len(radek)-1):\n            dalsiRad 
def fakt(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n    return f\ndef k_c(n,k):\n    return fakt(n)/(fakt(n-k)*fakt(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n\n    for n in range(pocet_radku):\n        for k in 
def faktorial(m):\n    x=1\n    for i in range(1,m+1):\n        x*=i\n    return x\n\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(n + 1):\n            print faktorial(n)/(faktorial(k)*faktorial(n-k 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def faktorial(m):\n    x=1\n    for i in range(1,m+1):\n        x*=i\n    return x\n\ndef pascaluv_trojuhelnik(a):\n    for n in range(a):\n        for k in range(n + 1):\n            print faktorial(n)/(faktorial(k)*faktorial(n-k)), 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0,n+1):\n            print kombinacni(n,k),\n        print\ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n 
def faktorial(n):\n    f=1\n    for i in range(1,n+1):\n        f*=i\n    return f\n\ndef kombin_cislo(n,k):\n    return faktorial(n)/(faktorial(n-k)*faktorial(k))\n\ndef pascaluv_trojuhelnik(r):\n    for n in range(r):\n        for 
def pascaluv_trojuhelnik(pocet_radku):\n    r=[1]\n    for n in range(pocet_radku):\n        for k in r:\n            print k,\n        print\n        dr=[1]\n        for j in range(len(r)-1):\n            dr.append(r[j]+r[j+1])\n 
def pascaluv_trojuhelnik(pocet_radku):\n    line = [1]\n    for n in range(pocet_radku):\n        print .join(str(n) for n in line)\n        line = [1] + [line[i] + line[i+1] for i in range(len(line) - 1)] + [1]\n 
def faktorial(i):\n    if i>1:\n        return i*faktorial(i-1)\n    elif i==0:\n        return 1\n    return i\n\ndef NnadK(N,K):\n    pomocna=faktorial(K)*faktorial(N-K)\n    vysledek=faktorial(N)//pomocna\n    return vysledek\n\nde 
def fact(n):\n    fact = 1\n    for i in range(1, n+1):\n        fact *= i\n    return fact\n\ndef kChooseN(k, n):\n    return fact(k) / (fact(n) * fact(k - n))\n\ndef pascaluv_trojuhelnik(pocet_radku):        \n    for n in range(poc 
def factorial(n):\n    out = 1\n    for i in range(2,n+1):\n        out = out * i\n    return out\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print facto 
def pascaluv_trojuhelnik(pocet_radku):\n    new_radek = [1,0]\n    print 1\n    for n in range(1,pocet_radku):\n        radek, new_radek = new_radek, [0]*(n+1)\n        new_radek[0] = 1\n        print 1,\n        for k in range(1, n):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(1, n + 1):\n            if k=1: print k,\n            else: print n-\n        print 1\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek=[1]\n    for i in range(pocet_radku):\n        for cislo in aktualni_radek:\n            print cislo,\n        print\n        aktualni_radek=dalsi_radek(aktualni_radek)\n        \ 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n\n 
def factorial(x):\n    if x == 0:\n        return 1\n    else:\n        faktorial = x\n        for i in range(1,x):\n            faktorial*=i\n        return faktorial\n            \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n 
def fakt(n):\n    f=1\n    for i in range(1,n+1):\n        f*=i\n    return f\ndef komb(n,k):\n    return fakt(n)/(fakt(k)*fakt(n-k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(1,pocet_radku+1):\n        for k in 
def f(x):\n    if x==0:\n        return 1\n    else:\n        return x*f(x-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print f(n)/(f(k)*f(n-k)),\n 
from math import factorial\ndef pascaluv_trojuhelnik(x):\n    for n in range(1, x+1):\n        for k in range(1, n):\n            print (factorial(x)/((factorial(k)*(factorial(x-k)))))\n        print\n 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def factorial(n):\n    factorial = 1\n    while n > 0:\n        factorial = factorial * n\n        n = n - 1\n    return factorial\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for radek in range(pocet_radku):\n        for sloupec in ra 
def faktorial(n):\n    cislo = 1\n    while n >= 1:\n        cislo = cislo * n\n        n = n - 1\n    return cislo\n        \ndef kombinacni_cislo(n,k):\n    return faktorial(n)/(faktorial(n-k) * faktorial(k))\n\ndef pascaluv_trojuheln 
def pascaluv_trojuhelnik(pocet_radku):\n    riadok = [1]\n    for n in range(pocet_radku):\n        for k in riadok:\n            print k,\n        print\n        riadok2 = [1]\n        for i in range(len(riadok)-1):\n            riadok2. 
def fact(n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(0,i+1):\n            if(j==0 or j==i):\n                print 1,\n            else:\n                print 2,\n        print 
def fact(n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(0,i+1):\n            if(j==0 or j==i):\n                print 1,\n            else:\n                print 2,\n        print 
def fact(n):\n    f = 1\n    for i in range (1,n+1):\n        f *= i\n    return f\n\ndef komb(n,k):\n    return fact(n)/(fact(k)*fact(n-k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j i 
def fact(n):\n    a = 1\n    for i in range(1,n+1):\n        a *= i\n    return a\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print fact(n)/(fact(n-k)*fa 
def pascaluv_trojuhelnik(pocet_radku):\n    print 1\n    patra = 1\n    predchozi = [1]\n    while (patra < pocet_radku):\n        radek = [1]\n        print 1,\n        for k in range(1,patra):\n            radek.append(predchozi[k-1] %2 
def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n    \ndef kombinacne(a,b):\n    return int((factorial(a)/(factorial(a-b)*factorial(b)))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    fo 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\ndef fak(n):\n    f=1\n    for i in range(1,n+1):\n        f*=i\n 
def pascaluv_trojuhelnik(pocet_radku):\n    radky = []\n    for cislo_radku in range(1, pocet_radku+1):\n        radek = [1] * cislo_radku\n        for pozice in range(1, cislo_radku - 1):\n            radek[pozice] = radky[cislo_radku - 2 
def pascaluv_trojuhelnik(pocet_radku):\n    radek=[1]\n    for i in range(1,pocet_radku+1):\n        for j in radek:\n            print j,\n        print\n        radek2=[1]\n        for i in range(len(radek)-1):\n            radek2.app 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [1]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek)-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualny = [1]\n    for i in range(pocet_radku) :\n        for x in aktualny :\n            print x,\n        print\n        dalsi = [1]\n        for i in range(len(aktualny) - 1) :\n 
def factorial (n):\n    factorial=1\n    while n>0:\n        factorial=factorial*n\n        n=n-1\n    return factorial\ndef kombinacni(n,k):\n    return factorial(n)/(factorial(n-k)*factorial(k))\ndef pascaluv_trojuhelnik(pocet_radku):\ 
def fact(n):\n    if n==0:\n        return 1\n    f = 1\n    for i in range(1, n+1):\n        f *= i\n    return f\n\ndef comb(n, k):\n    return(fact(n)/(fact(k)*fact(n-k)))\n\ndef pascaluv_trojuhelnik(n):\n    s = ""\n    for i i 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print faktorial(n)//(faktorial(k)*faktorial(n-k)),\n        print\n        \n        \ndef faktorial(n):\n    fakt= 
def pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(i+1):\n            print komb_c(i,j),\n        print\n\ndef komb_c(n,k):\n    return fak(n)/(fak(n-k)*fak(k))\n\ndef fak(n):\n    f=1\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n        \n\ndef dalsi_radek(radek):\n    novy\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n        \n\ndef dalsi_radek(radek):\n    novy\n 
def pascaluv_trojuhelnik(rows):\n    for n in range(1,rows+1):\n        for k in range(1, n+1):\n            if k<=n\n                print k,\n        print\n 
def pascaluv_trojuhelnik(rows):\n    for n in range(1,rows+1):\n        for k in range(1, n+1):\n            if k<=n\n                print k,\n        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        x=1\n        print 1,\n        for j in range(i):\n            x=x*(i-j)/(j+1)\n            print x,\n        print\n 
def pascaluv_trojuhelnik(pocet_radku):\n    s=[]\n    for i in range(pocet_radku):\n        p=[1]\n        print "1",\n        for j in range(i-1):\n            p.append(s[len(s)-1][j]+s[len(s)-1][j+1])\n            print s[len(s)-1][j 
def f(n):\n    fac = 1\n    for i in range(2,n+1):\n        fac *= i\n    return fac\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print f(n)/(f(k)*f(n-k)) 
def nextriadok(pole):\n    pole2 = [1]\n    dlzka = len(pole)\n    for i in range(dlzka-1):\n        pole2.append((pole[i]+pole[i+1]))\n    pole2.append(1)\n    return pole2\ndef pascaluv_trojuhelnik(pocet_radku):\n    pole = [1]\n 
def f(n):\n    r = 1\n    for i in range(1, n+1):\n        r *= i\n    return r\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print f(n) // f(k) // f(n-k),\n 
def pascaluv_trojuhelnik(pocet_radku):\n    c=[1]\n    for i in range(pocet_radku):\n        for n in c:\n            print n,\n        l=[1]\n        for j in range(i):\n            l.append(c[j]+c[j+1])\n        l.append(1)\n 
def pascaluv_trojuhelnik(pocet_radku):\n    riadok=[1]\n    for i in range(pocet_radku):\n        for j in riadok:\n            print j,\n        print\n        riadok2=[1]\n        for i in range(len(riadok)-1):\n            riadok2.appe 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [1]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek) - 1):\n 
def fact(n):\n    vysl = 1\n    for i in range(n):\n        vysl *= (i+1)\n    return vysl\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print fact(n)/(fac 
def faktorial(n):\n    if n==0:\n        return 1\n    else:\n        return n*faktorial(n-1)\ndef komb(n,k):\n    return faktorial(n)/(faktorial(n-k)*faktorial(k))\n                 \ndef pascaluv_trojuhelnik(n):\n    for i in range(n): 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni = [1]\n    for n in range(pocet_radku):\n        for x in aktualni:\n            print x,\n        print\n        dalsi = [1]\n        for i in range(len(aktualni)-1):\n            dals 
def pascaluv_trojuhelnik(pocet_radku):\n    soucet = 0\n    for n in range(pocet_radku):\n        for k in range(soucet, n+1):\n            print k,\n        print\n 
def pascal(n):\n    radky = []\n    for cislor in range (1, n+1):\n        radek = cislor*[1]\n        \n        for pozice in range (1, cislor -1):\n            radek[pozice] = radky[cislor-2][pozice-1]+radky[cislor-2][pozice]\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(1,pocet_radku+1):\n        my_line=[]\n        for k in range(n):\n            if k==0 or k==n-1:\n                my_line.append(1)\n            else:\n                my_line.a 
def pascaluv_trojuhelnik(n):\n    a=[1]\n    for i in range(n):\n        for x in a:\n            print x,\n        print\n        d=[1]\n        for i in range(len(a)-1):\n            d.append(a[i]+a[i+1])\n        d.append(1)\n 
def factorial(n):\n    if n == 1 or n == 0: return 1\n    return n * factorial(n-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(0, i+1):\n            cislo = factorial(i) / (factori 
def pascaluv_trojuhelnik(pocet_radku):\n    l=[]\n    for n in range(pocet_radku):\n        l.append([])\n        for k in range(0, n + 1):\n            if k==0 or k==n:\n                print 1,\n                l[n].append(1)\n 
def pascaluv_trojuhelnik(pocet_radku):\n    p=[1,1]\n    n=[]\n    print 1\n    print 1, 1\n    for i in range(2,pocet_radku):\n        n.append(1)\n        for j in range(1,i):\n            n.append(p[j]+p[j-1])\n        n.append(1)\ 
def factorial(p):\n    fact = 1\n    while p>0:\n        fact *=p\n        p-=1\n    return fact\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            cislo = factoria 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [1]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek)-1):\n 
def faktorial(n):\n    a=1\n    for x in range(1, n+1):\n        a*=x\n    return a\n\ndef kombinacne(n,k):\n    return faktorial(n)/(faktorial(k)*faktorial(n-k))\n\ndef pascaluv_trojuhelnik(pocet):\n    for x in range (pocet):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    s = [0,1]\n    for i in range(pocet_radku+1):\n        s.append(0)\n    s2 = [0] * ( pocet_radku+ 2)\n    for i in range(1, pocet_radku + 1):\n        for j in range(1, i+1):\n 
def faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n    return f\n\ndef kombinacni_cislo(n,k):\n    return faktorial(n)/(faktorial(k)*faktorial(n-k))\n\ndef pascaluv_trojuhelnik(n):\n    for i in range(n):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualniradek = [ 1 ]\n    for i in range(pocet_radku):\n        for j in aktualniradek:\n            print j,\n        print\n        dalsiradek = [ 1 ]\n        for i in range(len(aktualniradek 
def fact(pocet_radku):\n    fkt = 1\n    while pocet_radku>1:\n        fkt = pocet_radku*fkt\n        pocet_radku-=1\n    return fkt\n\ndef kombinacne_cislo(pocet_radku,k):\n    return fact(pocet_radku) / (fact(k) * fact(pocet_radku-k))\ 
def fact2(pocet_radku):\n    fkt = 1\n    while pocet_radku>1:\n        fkt = pocet_radku*fkt\n        pocet_radku-=1\n    return fkt\n\ndef kombinacne_cislo(pocet_radku,k):\n    return fact2(pocet_radku) / (fact2(k) * fact2(pocet_radku-k 
def nradek(radek):\n    nradek=[1]\n    for i in range(len(radek)-1):\n        nradek.append(radek[i]+radek[i+1])\n    nradek.append(1)\n    return nradek\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    aradek=[1]\n    for n in range( 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    seznam = [0]*pocet_radku\n    print 1\n    for x in range(pocet_radku):\n        seznam[x] = [0]*pocet_radku\n    for radek in range(pocet_radku):\n        for sl in range(radek+1):\n 
def factorial(m):\n    fact = 1\n    for i in range(1, m + 1):\n        fact = fact * i\n    return fact\n\ndef KombCislo(n, k):\n    citatel = factorial(n)\n    jmenovatel = factorial(n-k) * factorial(k)\n    komb = citatel/jmenovatel 
def faktorial(n):\n    fakt = 1\n    while n > 1:\n        fakt = fakt * n\n        n -= 1\n    return fakt\n\ndef kombCislo(n, k):\n    return (faktorial(n) / (faktorial(k) * faktorial(n-k)))\n\ndef pascaluv_trojuhelnik(pocet_radku):\ 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek = [ 1 ]\n    for i in range(pocet_radku):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_r 
def fact(n):\n    if n == 1 or n == 0:\n        return 1\n    else: \n        return n*fact(n-1)\ndef komb(n,k):\n    return fact(n)/(fact(k)*fact(n-k))\n\ndef pascaluv_trojuhelnik(n):\n    for i in range(n):\n        for y in range(i%2 
def pascaluv_trojuhelnik(pocet_radku):\n    aktual=[1]\n    dalsi=[]\n    for i in range (pocet_radku):\n        for j in range (len(aktual)):\n           print aktual[j],\n        if i==0 :\n            dalsi.append(1)\n        if i>0:\ 
def factorial(n):\n    if not n:\n        return 1\n    if n == 1:\n        return 1\n    else:\n        return factorial(n-1)*n\n    \ndef comb(a,b):\n    return factorial(a)/(factorial(b) * factorial(a - b))\n\ndef pascaluv_trojuheln 
def faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n    return f\n\ndef kombinacni_cislo(n,k):\n    return faktorial(n)/(faktorial(k) * faktorial (n-k))\n    \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for 
def pascaluv_trojuhelnik(n):\n    akt_radek =[1]\n    for i in range(n):\n        for x in akt_radek:\nprint x,\n        print\n        dal_radek = [1]\n        for i in range (len(akt_radek)-1):\ndal_radek.append(akt_radek[i]+akt_r 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
def f(n)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
def f(n)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
def f(n)\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print math.factorial(n)/(math.factorial(k)*math.factorial((n-k))),\n        print\n 
def f(n):\n    r = 1\n    for i in range(1,n+1):\n        r *= i\n    return r\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n+1):\n            print f(n)/(f(k)*f((n-k))),\n 
def fact(n):\n    f = 1\n    for i in range(1, n+1):\n        f*=i\n    return f\n\ndef komb_cislo(n, k):\n    return fact(n)/(fact(k)*fact(n-k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        fo 
def pascaluv_trojuhelnik(pocet_radku):\nfor i in range(pocet_radku):\nfor j in range(0,i+1):\nprint pomocna2(i,j),\nprint\n    \ndef pom(n):\n    if (n==1 or n==0):\n        return 1\n    else:\n        return n*pom(n-1)\n\n 
def factorial(n):\n    f = 1\n    for i in range(1, n+1):\n        f = f * i\n    return f\n\ndef binom(n,k):\n    return factorial(n)/(factorial(n-k) * factorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet 
def pascaluv_trojuhelnik(n):\n    ar=[1]\n    for n in range(n):\n        for k in ar:\n            print k,\n        print\n        dr=[1]\n        for i in range(len(ar)-1):\n            dr.append(ar[i]+ar[i+1])\n        dr.append( 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
 
def faktorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * faktorial(n-1)\n    \ndef komb(n,k):\n    if n==0 or n==k or k==0:\n        return 1\n    return faktorial(n)/(faktorial(k)*faktorial(n-k))\n    \ndef p 
\ndef factorial(p):\nfact=1\nwhile p>0:\nfact *= p \np-=1\nreturn fact\n    \ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            cislo = factorial(n)/(facto 
def pascaluv_trojuhelnik(pocet_radku):\nfact = lambda n: n * fact(n-1) if n > 0 else 1\ncur = 1\nfor r in range(pocet_radku):\nfor i in range(cur):\nprint fact(r) / (fact(r-i)*fact(i)),\n\ncur += 1\nprint 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k + 1, \n        print k - 1 + 1\n 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def factorial(n):\n    x=1\n    for i in range(1,n+1):\n        x=x*i\n    return x\n    \ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            x = factorial(n)\n 
def fak(f):\n    fa=1\n    for i in range (f):\n        fa*=i+1\n    return fa\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print fak(n)/(fak(k)*fak(n-k)) 
def factorial(n):\n    value = 1\n    for i in range(1, n + 1):\n        value *= i\n    return value\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(n - k) * factorial(k))\n\n\ndef pascaluv_trojuhelnik(pocet_ 
def f(n):\n    if n < 1:\n        return 1\n    return n*f(n-1)\n\ndef C(n, k):\n    return f(n)//(f(n-k)*f(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n 
def faktorial(n):\nfor i in range(1,n):\nn= n*i\nif n == 0:\nn=1\nreturn n\n\ndef numbers(a,b):\nc= faktorial(a)/(faktorial(b)*faktorial(a-b))\nprint c,\n\ndef pascaluv_trojuhelnik(n):\nfor y in range(n):\nfor x in range( 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n  \ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n  \ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n 
def fact(x):\nif x == 0:\nreturn 1\nelif x == 1:\nreturn 1\nreturn x * fact(x-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print fact(n) / (fact( 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    if pocet_radku>0:\n        print 1\n    if pocet_radku>1:\n        print 1,1\n    riadok=[1,1]    \n    for n in range(pocet_radku-2):\n        riadok1=[1]\n        for i in range(len(riadok)-1) 
def fak(n):\n    f=1\n    for i in range(1,n+1):\n        f=f*i\n    return f\n\ndef komb_c(n,k):\n    return fak(n)/(fak(n-k)*fak(k))\n\ndef pascaluv_trojuhelnik(pocet_r):\n    for i in range(pocet_r):\n        for j in range(i+1) 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacne_cislo(n,k),\n        print\n  \ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for i in range(pocet_radku):\n        for j in radek:\n            print j,\n        print\n        i_ty_radek = [1]\n        for k in range(len(radek)-1):\n            i_ty_rad 
def factorial(n):\n    value = 1\n    for i in range(1, n + 1):\n        value *= i\n    return value\n\ndef binomial_coefficient(n, k):\n    return factorial (n) / (factorial(n - k) * factorial(k))\n\ndef pascal_binomial(n):\n    row 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(rows):\n\n    for rownum in range (rows):\n        newValue=1\n        PrintingList = [newValue]\n        for iteration in range (rownum):\n            newValue = newValue * ( rownum-iteration ) * 1 / ( iteration %2 
def pascaluv_trojuhelnik(n):\n    riadok = [1]\n    for j in range(n):\n        for x in riadok:\n            print x,\n        print\n        next_riadok = [1]\n        for i in range(len(riadok) - 1):\n            next_riadok.append(ria 
def factorial(n):\n    fact = 1\n    for i in range(n):\n        fact = fact + fact*i   
def pascaluv_trojuhelnik(n):\n    aktualni_rad = [ 1 ]\n    for j in range(n):\n        for x in aktualni_rad:\n            print x,\n        print\n        dalsi_rad = [ 1 ]\n        for i in range(len(aktualni_rad)-1):\n            dals 
def pascaluv_trojuhelnik(n):\n    aktualni_rad = [ 1 ]\n    for j in range(n):\n        for x in aktualni_rad:\n            print x,\n        print\n        dalsi_rad = [ 1 ]\n        for i in range(len(aktualni_rad)-1):\n            dals 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def fakt(n):\n    f=1\n    for i in range(1,n+1):\n        f=i*f\n    return f\ndef bk(n, k):\n    b=(fakt(n))/(fakt(n-k)*fakt(k))\n    return b\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k 
def pascaluv_trojuhelnik(n):\naktualni_radek = [ 1 ]\nfor j in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] +\
def factorial(n):\n    a=1\n    for i in range(1,n+1):\n        a*=i\n    return a\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(0, pocet_radku):\n        for k in range(0, n + 1):          \n            print factori 
def factorial(k):\n    result = 1\n    for i in range(k):\n        result *= i+1\n    return result    \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print 
def factorial(n):\n    f=1\n    for i in range(1,n+1):\n        f = f*i\n    return f\n\ndef binomial_coefficient(n,k):\n    cislo = (factorial(n))/((factorial(n-k))*factorial(k))\n    return cislo\n\ndef pascaluv_trojuhelnik(n):\n 
def vypis_riadok(riadok):\n    for x in riadok:\n        if x != 0:\n            print x,\n    print\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    riadok = [0 for i in range(2*pocet_radku-1)]\n    riadok[pocet_radku-1] = 1\n    vypis_ri 
def pascaluv_trojuhelnik(pocet_radku):\n    radek = [1]\n    for i in range(pocet_radku):\n        print (" ".join (str(radek) for radek in radek))\n        novy_radek = []\n        novy_radek.append(1)\n        for i in range(len(radek)-1) 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [1]\n    for i in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek)-1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek = [1]\n    n=9\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek 
def pascaluv_trojuhelnik(pocet_radku):\n    pole=[1,1]\n    for n in range(1,pocet_radku+1):\n        for k in range(1, n + 1):\n            print pole[k-1],\n        if k>1:\n            pole.insert(0,1)  \n            for a in range( 
def factorial(n):\n    cislo = 1\n    while n >= 1:\n        cislo = cislo * n\n        n = n -1\n    return cislo\n\ndef komb(n,k):\n    k = factorial(n)//(factorial(n-k)*factorial(k))\n    return k\n\ndef pascaluv_trojuhelnik(n):\n 
def faktorial(x):\n    sum=1\n    for i in range (1, x+1):\n        sum*=i\n\n    return sum\n\ndef kombinacne_cislo(n,k):\n    if n>=k>=0:\n        x=faktorial(n)//((faktorial(n-k))*faktorial(k))\n        return x\n    else:\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        print\n 
def pascaluv_trojuhelnik(n):\n    radek = [1]\n    for j in range(n):\n        for a in radek:\n            print a,\n        print\n        dalsi_radek = [1]\n        for i in range(len(radek)-1):\n            dalsi_radek.append(radek[i] 
def pascaluv_trojuhelnik(x):\n    radek = [1]\n    for i in range(x):\n        for j in radek:\n            print j,\n        print\n        dalsi_radek = [1]\n        for i in range(len(radek)-1):\n            dalsi_radek.append(radek[i] 
def faktorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n*faktorial(n-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print faktorial 
def fakt(cis):\n    prom=1\n    for i in range(1,cis+1):\n        prom=prom*i\n    return prom\n        \ndef pascaluv_trojuhelnik(prom):\n    vys=0\n    for rad in range(prom):\n        \n        for slo in range(rad+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    tmp = 1\n    print "1"\n    for n in range(1,pocet_radku):\n        print "1",\n        for k in range( n ): \n            \n            tmp = tmp * (n - k) * 1 / (k+1)\n            print tmp, 
def fact(n):\n    if n==0:\n        vystup = 1\n    vystup = 1\n    for i in range(1,n+1):\n        vystup*=i\n    return vystup\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, 
def pascaluv_trojuhelnik(pocet_radku):\n    radek1 = [1]\n    print radek1\n    for i in range(pocet_radku - 1):\n        novy_radek = [1]\n        for j in range(len(radek1) - 1):\n            novy_radek.append(radek1[j] + radek1[j+1]) 
def pascaluv_trojuhelnik(pocet_radku):\n    pole1=[1]\n    pole2=[1]\n    for n in range(pocet_radku):\n        for k in range(1, n + 1):\n            if k<n:\n                pole2[k]=pole1[k-1]+pole1[k]\n            pole2.append(1)\ 
def factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print 1.0*fac 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek = [ 1 ]\n    for j in range(pocet_radku):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_r 
def pascaluv_trojuhelnik(pocet_radku):\n    riadok = [1]\n    for i in range(pocet_radku):\n        for k in riadok:\n            print k,\n        print\n        dalsi_riadok = [1]\n        for i in range (len(riadok)-1):\n            da 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek = [1]\n    for j in range(pocet_radku):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [1]\n        for i in range(len(aktualni_radek 
def pascaluv_trojuhelnik(pocet_radku):\n    seznam=[1]\n    pomoc=[]\n    print seznam[0]\n    for i in range(pocet_radku-1):\n        pomoc=seznam\n        seznam=[]\n        seznam.append(1)\n        for y in range(len(pomoc)):\n 
def faktorial(n):\n    vystup = 1\n    for i in range(1,n+1):\n        vystup *= i\n    return vystup\n\ndef kombinacne_cislo(n,k):\n    return faktorial(n)/(faktorial(n-k)*faktorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    aktualni_radek=[1]\n    for i in range(pocet_radku):\n        for j in aktualni_radek:\n            print j,\n        print\n        dalsi_radek=[1]\n        for k in range(len(aktualni_radek)-1) 
def pascaluv_trojuhelnik(n):\naktualni_radek = [ 1 ]\nfor j in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] + akt 
def faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n        f *= i\n    return f\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(n + 1):\n            print faktorial(n)/(fakto 
def pascaluv_trojuhelnik(n):\naktualni_radek = [ 1 ]\nfor j in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] +\
def faktorial(n):\n    suma = 1\n    for i in range(1,n+1):\n        suma *=i\n    return suma\n        \ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku+1):\n        for k in range(n):\n            print fakto 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print pascal(n,k),\n        print\ndef pascal(row,column):\n  if column == 0:\n        return 1\n  elif row == 0:\ 
def pascaluv_trojuhelnik(pocet_radku):\n    novy = [1]\n    for i in range(pocet_radku):\n        for s in novy:\n            print str(s),\n        print\n        stary = [0] + novy + [0]\n        novy = []\n        for j in range(i% 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        line=[1]\n        for k in range(n):\n            line.append(line[k]*(n-k)/(k+1))\n            print line[k],\n        print "1"\n 
def fak(n):\n    vys=1\n    for i in range(1,n+1):\n        vys=vys*i\n    return vys\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(0, pocet_radku + 1):\n            if i>=j:\n 
def pascaluv_trojuhelnik(pocet_radku):\n    sirka = 1\n    for n in range(1,pocet_radku+1):\n        for i in range(sirka):\n            if(i == 0 or i == sirka -1):\n                print 1,\n            else:\n                print fac 
def pascaluv_trojuhelnik(n):\nradek = [1]\nfor j in range (n):\nfor x in radek:\nprint x,\nprint\ndRadek = [1]\nfor i in range(len(radek)-1):\ndRadek.append(radek [i] + radek[i+1])\ndRadek.append(1)\nradek = dRad 
def pascaluv_trojuhelnik(pocet_radku):\n    new = []\n    for n in range(pocet_radku):\n        old = new\n        new = []\n        for k in range(n+1):\n            if k == 0 or k == n:\n                new.append(1)\n            else 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def faktor (n):\n    i = 1\n    x = 1\n    while n+1 > i:\n        x = (x * i)\n        i = (i + 1)\n    return (x)\n\n\ndef combination(n, k):\n    return int((faktor(n)) / ((faktor(k)) * faktor(n - k)))\n\n\ndef pascaluv_trojuh 
def pascaluv_trojuhelnik(pocet_radku):\n    new = []\n    for n in range(pocet_radku):\n        old = new\n        new = []\n        for k in range(n+1):\n            if k == 0 or k == n:\n                new.append(1)\n            else 
def pascaluv_trojuhelnik(pocet_radku):\n    new = []\n    for n in range(pocet_radku):\n        old = new\n        new = []\n        for k in range(n+1):\n            if k == 0 or k == n:\n                new.append(1)\n            else 
def faktorial(n):\n    cislo = 1\n    while n != 0:\n        cislo = cislo*n\n        n -= 1\n    return cislo\n\ndef komb(n,k):\n    vysl = (faktorial(n))/((faktorial(n-k))*(faktorial(k)))\n    return vysl\n\ndef pascaluv_trojuhelnik( 
def pascaluv_trojuhelnik(pocet_radku):\n    riadok = [1]\n    for n in range(pocet_radku):\n        for k in riadok:\n            print k,\n        print\n        nasledujuci_riadok = [1]\n        for x in range(len(riadok)-1):\n 
def factorial(n):\n    if n == 0: return 0\n    result = 1\n    for i in range(1,n+1):\n        result *= i\n    return result\n\ndef binomial_coefficient(n, k):\n    if n == k or n == 0 or k == 0: return 1\n    else: return factorial( 
def fact(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n    return f\n\ndef coefficient(n, k):\n    return fact(n)/ (fact(k)*fact(n-k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n 
def pascaluv_trojuhelnik(n):\n    for i in range(n):\n        for j in range(j + 1):\n            print \n        print n\n 
def pascaluv_trojuhelnik(n):\n    t=[]\n    for i in range(n):\n        row=[]\n        for j in range(i+1):\n            if j==0 or j==i:\n                row.append(1)\n\n            else:\n                row.append(t[i-1][j]+t[i- 
def fakt(n):\n    a=1\n    for i in range(1,n+1):\n        a *= i\n    return a\n\ndef kombcis(n,k):\n    b=((fakt(n))/((fakt(n-k)*fakt(k))))\n    return b\n     \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_r 
def pascaluv_trojuhelnik(n):\n    seznam1 = []\n    for i in range(n):\n        seznam2 = []\n        for j in range(i + 1):\n            if j==0 or j==i:\n                seznam2.append(1)\n                print 1,\n            else:\ 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print int(fakt(n)/(fakt(k) * fakt(n-k))),\n        print\n        \ndef fakt(n):\n    if n == 1 or n == 0:\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for radek in range(pocet_radku):\n        new = 1\n        print new,\n        for i in range(radek):\n            new = new * ( radek - i ) * 1 / ( i + 1)\n            print new,\n        prin 
def pascaluv_trojuhelnik(pocet_radku):\n    akt=[1]\n    for n in range(pocet_radku):\n        for y in akt:\n            print y,\n        next=[1]\n        for k in range(0, len(akt)-1):\n            next.append(akt[k]+akt[k+1])\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for i in range(1,pocet_radku+1):\n        for j in range (0,i):\n            if j==0 or j==i-1:\n                print "1",\n            else:\n                print fakt(i-1)/(fakt(i-j-1)*fakt( 
def faktorial(n):\n    cislo=1\n    for i in range(1,n+1):\n        cislo=i*cislo\n    return cislo\n\ndef kombinacnicislo(n,k):\n    nk=n-k\n    return faktorial(n)//(faktorial(n-k)*faktorial(k))\n\ndef pascaluv_trojuhelnik(n):\n 
def pascaluv_trojuhelnik(n):\n    def row(rowIndex):\n        if rowIndex == 0:\n            return [1]\n        r = [0] * (rowIndex + 1)\n        r[0] = 1\n        r[1] = 1\n        for i in range(rowIndex - 1):\n            for j in r 
def factorial(n):\n    r = 1\n    for i in range(1, n+1):\n        r = r * i\n    return r\n\ndef binomial_coefficient(n, k):\n    result = (factorial(n))/(factorial(k)*factorial(n - k))\n    return result\n\ndef pascaluv_trojuhelnik( 
def factorial(n):\n    factorial=1\n    i=1\n    while i<n+1:\n        factorial=factorial*i\n        i=i+1\n    return(factorial)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    n_fact=1\n    y=1\n    z=1\n    for n in range(pocet 
def pascaluv_trojuhelnik(n):\naktualni_radek = [ 1 ]\nfor i in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] +aktu 
def pascaluv_trojuhelnik(pocet_radku):\n    seznam = [1]*(pocet_radku + 1)   \n    temp = [1]*(pocet_radku + 1)\n    for radek in range(pocet_radku):\n        for i in range(radek+1):\n            if i == 0 or i == radek:\n 
def pascaluv_trojuhelnik(n):\n    radek = [ 1 ]\n    for i in range (n):\n        for j in radek:\n            print j,\n        print\n        radek2 = [ 1 ]\n        for k in range(len(radek)-1):\n            radek2.append(radek[k] + 
def fakt(n):\n    s=1\n    if n==0:\n        return s\n    else:\n        for i in range (1,n+1):\n            s=s*i\n        return s\n\n\ndef com (n,k):\n    s=fakt (n)/(fakt (k)*fakt (n-k))\n    return s\n\ndef pascaluv_trojuhe 
def faktorial(n):\n    f=1\n    for i in range (1,n+1):\n        f=f*i\n    return f\n\ndef kombinacne_cislo (n,k):\n    kombinacne_cislo=faktorial(n)/(faktorial(k)*faktorial(n-k))\n    return kombinacne_cislo\n\ndef pascaluv_trojuhel 
def komb(n, k):\n    a = 1\n    b = 1\n    for i in range (1, n+1):\n        a *= i\n    for i in range (1, k+1):\n        b *= i\n    for i in range (1, n-k+1):\n        b *= i\n    return a/b\n\ndef pascaluv_trojuhelnik(pocet_r 
def pascaluv_trojuhelnik(pocet_radku):\n    pred = []\n    vypis = []\n    riadok = "" \n    for i in range(pocet_radku):\n        print riadok + "1"\n        prve = 0\n        druhe = 0\n        j=0\n        riadok="1 "\n        pred 
def pascaluv_trojuhelnik(pocet_radku):\n    prev,new=[],[]\n    for n in range(pocet_radku):\n        if n<2:\n            for k in range(0, n + 1):\n                print 1,\n                new.append(1)\n        if n>=2:\n 
def pascaluv_trojuhelnik(pocet_radku):\n    ted = [ 1 ]\n    for j in range(pocet_radku):\n        for x in ted:\n            print x,\n        print\n        dalsi = [ 1 ]\n        for i in range(len(ted)-1):\n            dalsi.append(te 
def factorial(n):\n    sum = 1\n    for i in range(n):\n        if i > 0:\n            sum = sum * (i + 1)\n    return sum\n\n\ndef combination(n,k):\n    if k>n:\n        return 0;  
def pascaluv_trojuhelnik(pocet_radku):\n    l1 = [1,1]\n    l2 = []\n    print 1\n    if pocet_radku < 2: return\n    print 1,1\n    for n in range(pocet_radku-2):\n        l2.append(1)\n        for k in range(len(l1)-1):\n            l2 
def pascaluv_trojuhelnik(pocet_radku):\naktualni_radek = [ 1 ]\nfor j in range(pocet_radku):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktua 
def factorial(n):\nresult = 1\nfor i in range(2, n + 1):\nresult = result * i\nreturn result\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(n - k) * factorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku): 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            un = 1\n            the = 1 \n            trois = 1\n            for i in range(1,n+1):\n            un*=i\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print fakt(n)/(fakt(k)*fakt(n-k)),\n        print\n        \ndef fakt(n):\n    v=1\n    for i in range (n,0,-1):\n 
def fact(n):\n    result=1\n    for i in range(1, n+1):\n        result=result*i\n    return result\n\ndef binom(n, k):\n    return fact(n)/(fact(n-k) * fact(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radk 
def pascaluv_trojuhelnik(pocet_radku):\n    actl=[1]\n    for j in range(pocet_radku):\n        for x in actl:\n            print x,\n        print\n        nactl=[1]\n        for i in range(len(actl)-1):\n            nactl.append(actl[i] 
def pascaluv_trojuhelnik(pocet_radku):\n    current_row = [1]\n    for _ in range(pocet_radku):\n        for number in current_row:\n            print number,\n        print\n\n        next_row = [1]\n        for i in range(len(current_ro 
def pascaluv_trojuhelnik(n):\nradek = [1]\nfor i in range(n):\nprint( .join(str(radek) for radek in radek))\nnovy_radek = []\nnovy_radek.append(1)\nfor i in range(len(radek)-1):\nnovy_radek.append(radek[i]+radek[i+1])\ 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\n        for x in aktualni_radek:\n            print x,\n        print\n        dalsi_radek = [ 1 ]\n        for i in range(len(aktualni_radek)-1):\n 
def pascal(riad):\n    r1 = [1]\n    r2 = [1, 1]\n    troju = [r1, r2]\n    r = []\n    if riad == 1:\n        r1[0] = str(r1[0])\n        print(.join(r1))\n    elif riad == 2:\n        for o in troju:\n            for a in range(len 
def pascaluv_trojuhelnik(riad):\n    r1 = [1]\n    r2 = [1, 1]\n    troju = [r1, r2]\n    r = []\n    if riad == 1:\n        r1[0] = str(r1[0])\n        print(.join(r1))\n    elif riad == 2:\n        for o in troju:\n            for 
def pascals_triangle(n_rows):\n    results = [] \n    for _ in range(n_rows): \n        row = [1] \n        if results: \n            last_row = results[-1] \n            row.extend([sum(pair) for pair in zip(last_row, last_row[1:])])\n 
def factorial(n):\nresult=1\nfor i in range(1,n+1):\nresult*=i\nreturn result\n\ndef binomial_coefficient(n, k):\n    return ((factorial(n))/(factorial(k)*factorial(n-k)))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in r 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print pc(n, k),\n        print\n\ndef perm(num):\n    res = 1\n    for i in range(1, num + 1):\n        res = re 
def pascaluv_trojuhelnik(pocet_radku):\n    seznam=[]\n    predchozi=[]\n    for row in range(pocet_radku):\n        podseznam=[1]\n        for col in range(1,row):\n            podseznam.append(predchozi[col-1]+predchozi[col])\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print binomical_coefficient(n,k),\n        print\n\ndef binomical_coefficient(n,k):\n    return (faktorial(n)/(fakto 
def pascaluv_trojuhelnik(pocet_radku):\n    radek=[]\n    for n in range(pocet_radku):\n        radek+=[1]\n        pomocny_radek=[]\n        for i in radek: pomocny_radek+=[i]\n        for k in range(1, n):\n            pomocny_radek[ 
def factorial(n):\n    a = 1\n    if n <= 0:\n        return 1\n    for i in range(1, n+1):\n        a = a*i\n    return a\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(0, pocet_radku):\n        for k in range(0, n% 
def fac(n):\n    f=1\n    for i in range(1,n+1):\n        f=f*i\n    return f\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in range(pocet_radku):\n        for j in range(i+1):\n            print (fac(i)//(fac(i-j)*fac(j))),\ 
def factorial(n):\n    count = 1\n    \n    if n == 0:\n        return 1\n    \n    for i in range(1, n + 1):\n        count *= i\n    \n    return count\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n  \ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n 
def factorial(n):\n    if n==0:\n        return(1)\n    else:\n        return(n * factorial(n-1))\ndef kombinace(n, k):\nreturn(factorial(n)/(factorial(n-k) * factorial(k)))\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(poc 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print kombinacni_cislo(n,k),\n        print\n\ndef faktorial(n):\n    f = 1\n    for i in range(1,n+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            if k == 0 or k == n:\n                print 1,\n            else:\n                print (k-1)+(k),\n        print 
def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            if k 
def nextLinePacsTriangle(l):\n    line = [1]\n    for i in range(len(l)-1):\n        line.append(l[i]+l[i+1])\n    line.append(1)\n    return line\ndef pascaluv_trojuhelnik(n):\n    triangle = [[1]]\n    prevLine = [1]\n    for i in 
def pascaluv_trojuhelnik(n):\n    triangle = [[1]]\n    prevLine = [1]\n    for i in range(n-1):\n        prevLine = nextLinePacsTriangle(prevLine)\n        triangle.append(prevLine)\n    for i in triangle:\n        for j in i:\n 
def komb_cislo (n,k):\nif k==0 or k==n or (k==1 and n==1):\nreturn 1\nelse:\n\nhorna_hodnota= 1\nfor i in range (1,n+1): \nhorna_hodnota*=i\ndolna_hodnota=1\nfor i in range(1, k+1):\ndolna_hodnota *= i\nfor i 
def fact(n):\ny = 1\nfor i in range(1,n+1):\ny = y*i\nreturn y\n\ndef pascaluv_trojuhelnik(pocet_radku):\nfor n in range(pocet_radku):\nfor k in range(0, n + 1):\nprint fact(n)/(fact(n-k)*fact(k)),\nprint\n 
def faktorial(n):\n    sum = 1\n    for i in range(1, n+1):\n        sum = sum * i\n    return sum\n\ndef pascaluv_trojuhelnik(n):\n    for i in range(n):\n        for k in range(i+1):\n            print faktorial(i)/(faktorial(k)*fa 
def factorial(n):\n    if n == 0:\n        f = 1\n    else:\n        f = n\n        while n > 1:\n            f *= n - 1\n            n -= 1\n    return f\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(0, pocet_radku):\ 
def factorial(n):\n    x=1\n    for i in range(2,n+1):\n        x *= i\n    return x\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    x = 0\n    for i in range(pocet_radku):\n        for j in range(i+1):\n            x = factorial( 
def factorial(n):\n    vysledok = 1\n    for k in range(n,0,-1):\n        vysledok *= k\n    return vysledok\n\ndef binomial_coefficient(i, k):\n    citatel=factorial(i)\n    menovatel=factorial(i-k)*factorial(k)\n    koeficient=citatel/ 
def pascaluv_trojuhelnik(riad):\n    r1 = [1]\n    r2 = [1, 1]\n    troju = [r1, r2]\n    r = []\n    if riad == 1:\n        r1[0] = str(r1[0])\n        print(.join(r1))\n    elif riad == 2:\n        for o in troju:\n            for 
def factorial(x):\nr=1\nfor i in range(1,x+1):\nr=r*i\nreturn r\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(n+1):\n            print factorial(n)//(factorial(n-k)*factorial 
def pascaluv_trojuhelnik(n):\n    akt=[1]\n    for j in range (n):\n        for x in akt:\n            print x,\n        print\n        dal = [1]\n        for i in range(len(akt)-1):\n            dal.append(akt[i]+akt[i+1])\n 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print k,\n        d=[1]\n        a=[1]\n        for x in range(len(a)-1):\n            d.append(a[x]+a[x+1])\n 
def faktorial(n):\n    x=1\n    for i in range(n):\n        x=x*(i+1)\n    return x\n\ndef binomial_coeficient(n,k):\n    return (faktorial(n)/faktorial(k)/faktorial(n-k))\n\n    \n\ndef pascaluv_trojuhelnik(n):\n    for i in range( 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(n+1):\n            print comb(n,k),\n        print\n        \ndef comb(n,k):\n    return fact(n)/(fact(n-k)*fact(k))\ndef fact(n):\n    f 
def fak(n):\n    s = 1\n    for i in range(1, n + 1):\n        s *= i\n    return s\n\ndef kc(n, k):\n    return (fak(n)/(fak(n-k) * fak(k)))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k 
def pascaluv_trojuhelnik(pocet_radku):\n    l = [1]\n    p = []\n    for i in range(pocet_radku):\n        troj = [1]\n        for j in range(len(l)-1):\n            troj.append(l[j]+l[j+1])\n        troj.append(1)\n        for s in r 
def fact(n):\n    fact = 1\n    for i in range (1,n+1):\n        fact = fact * i\n    return fact\n        \n\ndef kombinace (n, k):\n    return (fact(n)/(fact(k)*fact(n-k)))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i in ra 
def fact(cislo):\n    if cislo==0: return 1\n    fact =1\n    for i in range(1,cislo+1):\n        fact*=i\n    return fact\n\ndef pascaluv_trojuhelnik(n):\n    for i in range(n):\n        for j in range(i+1):\n            print (fac 
def pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        if n==0:\n            m=1\n        else:\n            m=m*n\n        for k in range(0, n + 1):\n            o=n-k\n            for z in range(o+1):\n 
def factorial(n):\n    x=1\n    for i in range(1, n+1):\n        x*=i\n    return x\n\n\ndef pascaluv_trojuhelnik(n):\n    for i in range(n):\n        for j in range(n):\n            if j<=i:\n                print factorial(i)/((fac 
def factorial(n):\n    total=1\n    for i in range(1,n+1):\n        total=total*i\n    return total\n    \ndef kombinacni_cislo(n,k):\n    return factorial(n)//(factorial(n-k)*factorial(k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n 
def fact(n):\n    if n < 1: return 1\n    return n * fact(n-1)\n\ndef comb(n, k):\n    return fact(n) / (fact(k) * fact(n-k))\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(n+1):\n 
def pascaluv_trojuhelnik(pocet_radku):\n    tr = []\n    for row in range(n):\n        row_content = [1] * (row+1)\n        for col in range(1,row):\n            row_content[col] = (tr[row-1][col-1]+tr[row-1][col])           \n        t 
def vypocet(n,k):\n    if k == 0 or k == n:\n        return 1\n    return vypocet(n-1, k-1) + vypocet(n-1, k)\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        vysl = ""\n        for k in range(0, n %2 
def pascaluv_trojuhelnik(pocet_radku):\n    numbers = []\n    for i in range(pocet_radku):\n        content = [1] * (i +1)\n        for j in range(1, i):\n            content[j] = numbers[-1][j-1] + numbers[-1][j]\n        numbers.appen 
def pascaluv_trojuhelnik(pocet_radku):\n    numbers = []\n    for i in range(pocet_radku):\n        content = [1] * (i +1)\n        for j in range(1, i):\n            content[j] = numbers[-1][j-1] + numbers[-1][j]\n        numbers.appen 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for i in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] % 
def factor(n):\n    f=1\n    for i in range (n,1,-1):\n        f*=i\n    return f\ndef komb(n,m):\n    nk=factor(n-m)\n    nkk=nk*factor(m)\n    kc=factor(n)/nkk\n    return kc\n\n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for i i 
def faktorial(n):\n    fktrl = 1\n    for i in range(1,n+1):\n        fktrl = fktrl * i\n    return fktrl\n\ndef combnum(n,k):\n    return (faktorial(n))/(faktorial(n-k)*faktorial(k))\n    \ndef pascaluv_trojuhelnik(pocet_radku):\n 
def pascaluv_trojuhelnik(pocet_radku):\naktualni_radek = [ 1 ]\nfor j in range(pocet_radku):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktua 
def factorial(n):\n    x=1\n    for i in range(n):\n        x=x*(n-i)\n    return x \n\ndef pascaluv_trojuhelnik(pocet_radku):\n    for n in range(pocet_radku):\n        for k in range(0, n + 1):\n            print factorial(n)/(factor 
def pascaluv_trojuhelnik(n):\n    aktualni_radek = [ 1 ]\n    for j in range(n):\nfor x in aktualni_radek:\nprint x,\nprint\ndalsi_radek = [ 1 ]\nfor i in range(len(aktualni_radek)-1):\ndalsi_radek.append(aktualni_radek[i] % 
def pascaluv_trojuhelnik(pocet_radku):\n    print 1\n    print "1 1"\n    previous = [1,1]\n    for i in range(3,pocet_radku+1):\n        next = []\n        next.append(1)\n        print 1,\n        for t in range(1,i-1):\n 
