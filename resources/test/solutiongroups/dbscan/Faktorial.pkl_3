def faktorial(n):
    if n==1: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: prom = n * faktorial(n-1)
    return prom
 
def faktorial(n):
    if (n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1 :
        return n
    else: 
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n* faktorial(n-1)
    
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0 :
        return 1
    else :
        return n * faktorial(n-1)
 
def faktorial(n):
    if (n==1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n==1:return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1) 
def faktorial(n):
    if n==1:
     return 1
    else:
     return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
   
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        f = n*faktorial(n-1)
    return f
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n,sou=1):
    if n==1 : return sou
    else: return faktorial(n-1,sou*n)
 
def faktorial(n):
    if n == 0:
        return 1
    else: 
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        
        return n *faktorial (n-1)
 
def faktorial(n):
    if(n==2):
        return 2
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n==1):
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
       return 1
    else:
        return n* faktorial (n-1)
    
    
 
def faktorial(n):
    if n ==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
        if n==0:
            return 1
        else:
            return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*factorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1) 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return (n)*faktorial(n-1)
    return n
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n* faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: prom = n * faktorial(n-1)
    return prom
 
def faktorial(n):
    if (n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1 :
        return n
    else: 
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n* faktorial(n-1)
    
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0 :
        return 1
    else :
        return n * faktorial(n-1)
 
def faktorial(n):
    if (n==1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n==1:return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1) 
def faktorial(n):
    if n==1:
     return 1
    else:
     return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
   
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        f = n*faktorial(n-1)
    return f
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n,sou=1):
    if n==1 : return sou
    else: return faktorial(n-1,sou*n)
 
def faktorial(n):
    if n == 0:
        return 1
    else: 
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        
        return n *faktorial (n-1)
 
def faktorial(n):
    if(n==2):
        return 2
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n==1):
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
       return 1
    else:
        return n* faktorial (n-1)
    
    
 
def faktorial(n):
    if n ==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
        if n==0:
            return 1
        else:
            return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*factorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1) 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return (n)*faktorial(n-1)
    return n
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n* faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: prom = n * faktorial(n-1)
    return prom
 
def faktorial(n):
    if (n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1 :
        return n
    else: 
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n* faktorial(n-1)
    
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0 :
        return 1
    else :
        return n * faktorial(n-1)
 
def faktorial(n):
    if (n==1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n==1:return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1) 
def faktorial(n):
    if n==1:
     return 1
    else:
     return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
   
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        f = n*faktorial(n-1)
    return f
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n,sou=1):
    if n==1 : return sou
    else: return faktorial(n-1,sou*n)
 
def faktorial(n):
    if n == 0:
        return 1
    else: 
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        
        return n *faktorial (n-1)
 
def faktorial(n):
    if(n==2):
        return 2
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n==1):
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
       return 1
    else:
        return n* faktorial (n-1)
    
    
 
def faktorial(n):
    if n ==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
        if n==0:
            return 1
        else:
            return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*factorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1) 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return (n)*faktorial(n-1)
    return n
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n* faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: prom = n * faktorial(n-1)
    return prom
 
def faktorial(n):
    if (n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1 :
        return n
    else: 
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n* faktorial(n-1)
    
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0 :
        return 1
    else :
        return n * faktorial(n-1)
 
def faktorial(n):
    if (n==1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
 
def faktorial(n):
    if n == 0: return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n==1:return 1
    else: return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n - 1) 
def faktorial(n):
    if n==1:
     return 1
    else:
     return n*faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1) 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
   
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n==1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        f = n*faktorial(n-1)
    return f
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n,sou=1):
    if n==1 : return sou
    else: return faktorial(n-1,sou*n)
 
def faktorial(n):
    if n == 0:
        return 1
    else: 
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n == 1):
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
        return 1
    else:
        
        return n *faktorial (n-1)
 
def faktorial(n):
    if(n==2):
        return 2
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if(n==1):
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n==0:
       return 1
    else:
        return n* faktorial (n-1)
    
    
 
def faktorial(n):
    if n ==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
        if n==0:
            return 1
        else:
            return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1)
    
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*factorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1: return 1
    else: return n * faktorial(n-1)
 
def faktorial(n):
    if n==1:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return faktorial(n-1)*n
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n-1) 
def faktorial(n):
    if n==1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return (n)*faktorial(n-1)
    return n
 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n*faktorial(n-1)

 
def faktorial(n):
    if n==0:
        return 1
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return n
    else:
        return n*faktorial(n-1)
 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n* faktorial(n-1)
 
def faktorial(n):
    if n == 0:
        return 1
    else:
        return n * faktorial(n - 1)

 
def faktorial(n):
    if n == 1:
        return 1
    else:
        return n * faktorial(n-1)
 
